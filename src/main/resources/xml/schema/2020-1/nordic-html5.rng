<?xml version="1.0" encoding="UTF-8"?>
<grammar ns="http://www.w3.org/1999/xhtml" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns:epub="http://www.idpf.org/2007/ops" xmlns:sch="http://purl.oclc.org/dsdl/schematron">
    
    <a:documentation>Nordic EPUB3 content document structure - 2020-1</a:documentation>
    
    <a:documentation>Imports</a:documentation>
    
    <include href="http://www.daisy.org/pipeline/modules/mathml-utils/mathml3.rng">
        <a:documentation>MathML 3.0</a:documentation>
        <start combine="choice">
            <notAllowed/>
        </start>
        <define name="anyElement">
            <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
        </define>
    </include>
    
    <start>
        <a:documentation>The root element.</a:documentation>
        <ref name="html"/> <!-- html -->
    </start>
    
    <define name="Character">
        <a:documentation>a single character from [ISO10646]</a:documentation>
        <data type="string" datatypeLibrary=""/>
        <!-- a single character from [ISO10646]. -->
    </define>
    
    <define name="ContentType">
        <a:documentation>media type, as per [RFC2046].</a:documentation>
        <data type="string" datatypeLibrary=""/>
        <!-- media type, as per [RFC2046]. -->
    </define>
    
    <define name="LanguageCode">
        <a:documentation>a language code, per [RFC4646]. </a:documentation>
        <data type="NMTOKEN"/>
        <!-- a language code, per [RFC4646]. -->
    </define>
    
    <define name="Number">
        <a:documentation>one or more digits.</a:documentation>
        <data type="string" datatypeLibrary=""/>
        <!-- one or more digits. -->
    </define>
    
    <define name="LinkTypes">
        <a:documentation>space-separated list of link types.</a:documentation>
        <data type="string" datatypeLibrary=""/>
        <!-- space-separated list of link types. -->
    </define>
    
    <define name="MediaDesc">
        <a:documentation>single or comma-separated list of media descriptors;</a:documentation>
        <a:documentation>possible values include BRAILLE, PRINT, PROJECTION, SPEECH, ALL,</a:documentation>
        <a:documentation> or the default SCREEN.</a:documentation>
        <data type="string" datatypeLibrary=""/>
        <!--
        single or comma-separated list of media descriptors;
        possible values include BRAILLE, PRINT, PROJECTION, SPEECH, ALL,
        or the default SCREEN.
      -->
    </define>
    
    <define name="Text">
        <a:documentation>used for titles etc.</a:documentation>
        <data type="string" datatypeLibrary=""/>
        <!-- used for titles etc. -->
    </define>
    
    <define name="URI">
        <a:documentation>a Uniform Resource Identifier, see [RFC2396].</a:documentation>
        <data type="string" datatypeLibrary=""/>
        <!-- a Uniform Resource Identifier, see [RFC2396]. -->
    </define>
    
    <a:documentation>Content Models</a:documentation>
    
    <define name="htmlblocknoimggroup">
        <a:documentation>block elements unique to html without imggroup.</a:documentation>
        <choice>
            <ref name="author.block"/> <!-- p -->
            <ref name="prodnote"/> <!-- aside -->
            <ref name="sidebar"/> <!-- aside, figure -->
            <ref name="note"/> <!-- aside -->
            <ref name="annotation"/> <!-- aside -->
            <ref name="general.aside"/> <!-- aside -->
        </choice>
        <!-- block elements unique to html without imggroup. -->
    </define>

    <define name="general.aside">
        <element name="aside">
            <!-- HTML content model: (a | abbr | address | article | aside | audio | b | bdi | bdo | blockquote | br | button | canvas | cite | code | data | datalist | del | details | dfn | dialog | div | dl | em | embed | fieldset | figure | footer | form | h1 | h2 | h3 | h4 | h5 | h6 | header | hr | i | iframe | img | input | ins | kbd | keygen | label | link | main | map | mark | math | menu | meta | meter | nav | noscript | object | ol | output | p | pre | progress | q | ruby | s | samp | script | section | select | small | span | strong | style | sub | sup | svg | table | template | textarea | time | u | ul | var | video | wbr | (text))* -->
            <!-- Strict content model: (h1 | em | strong | dfn | code | samp | kbd | abbr | a | img | figure | br | q | sub | sup | span | bdo | p | ol | ul | dl | div | blockquote | table | address | (text))* -->
            <ref name="attrs"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <zeroOrMore>
                <choice>
                    <ref name="hd"/> <!-- h1, h2, h3, h4, h5, h6 -->
                    <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
                    <ref name="pagebreak.block"/> <!-- div -->
                </choice>
            </zeroOrMore>
            <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
        </element>
    </define>

    <define name="inlineinblock">
        <a:documentation>inlines that may alternatively be in block elements.</a:documentation>
        <choice>
            <ref name="a"/> <!-- a -->
            <ref name="cite"/> <!-- span -->
            <ref name="samp"/> <!-- samp -->
            <ref name="kbd"/> <!-- kbd -->
            <ref name="pagebreak.inline"/> <!-- span -->
        </choice>
        <!-- inlines that may alternatively be in block elements. -->
    </define>
    
    <define name="block">
        <a:documentation>common non-head elements for use with sectioning elements.</a:documentation>
        <choice>
            <ref name="p"/> <!-- p, hr, ol, ul, dl -->
            <ref name="pre"/> <!-- pre -->
            <ref name="list"/> <!-- ol, ul -->
            <ref name="dl"/> <!-- dl -->
            <ref name="div"/> <!-- div -->
            <ref name="blockquote"/> <!-- blockquote -->
            <ref name="img"/> <!-- img -->
            <ref name="figure.imggroup"/> <!-- figure -->
            <ref name="poem"/> <!-- section -->
            <ref name="linegroup"/> <!-- div, section -->
            <ref name="byline"/> <!-- span -->
            <ref name="dateline"/> <!-- span -->
            <ref name="epigraph"/> <!-- blockquote, p -->
            <ref name="table"/> <!-- table -->
            <ref name="address"/> <!-- address -->
            <ref name="line"/> <!-- p -->
            <ref name="htmlblocknoimggroup"/> <!-- p, aside, figure -->
            <ref name="math"/> <!-- math -->
        </choice>
    </define>
    
    <define name="blocknoimggroup">
        <a:documentation>common non-head elements for use with sectioning elements.</a:documentation>
        <choice>
            <ref name="p"/> <!-- p, hr, ol, ul, dl -->
            <ref name="pre"/> <!-- pre -->
            <ref name="list"/> <!-- ol, ul -->
            <ref name="dl"/> <!-- dl -->
            <ref name="div"/> <!-- div -->
            <ref name="blockquote"/> <!-- blockquote -->
            <ref name="poem"/> <!-- section -->
            <ref name="linegroup"/> <!-- div, section -->
            <ref name="byline"/> <!-- span -->
            <ref name="dateline"/> <!-- span -->
            <ref name="epigraph"/> <!-- blockquote, p -->
            <ref name="table"/> <!-- table -->
            <ref name="address"/> <!-- address -->
            <ref name="line"/> <!-- p -->
            <ref name="htmlblocknoimggroup"/> <!-- p, aside, figure -->
            <ref name="math"/> <!-- math -->
        </choice>
    </define>
    
    <define name="blocknoimggroupnotable">
        <a:documentation>common non-head elements for use with sectioning elements.</a:documentation>
        <choice>
            <ref name="p"/> <!-- p, hr, ol, ul, dl -->
            <ref name="pre"/> <!-- pre -->
            <ref name="list"/> <!-- ol, ul -->
            <ref name="dl"/> <!-- dl -->
            <ref name="div"/> <!-- div -->
            <ref name="blockquote"/> <!-- blockquote -->
            <ref name="poem"/> <!-- section -->
            <ref name="linegroup"/> <!-- div, section -->
            <ref name="byline"/> <!-- span -->
            <ref name="dateline"/> <!-- span -->
            <ref name="epigraph"/> <!-- blockquote, p -->
            <ref name="address"/> <!-- address -->
            <ref name="line"/> <!-- p -->
            <ref name="htmlblocknoimggroup"/> <!-- p, aside, figure -->
            <ref name="math"/> <!-- math -->
        </choice>
    </define>

    <define name="docblockorinline">
        <a:documentation>common non-head elements for use with sectioning elements.</a:documentation>
        <choice>
            <ref name="doctitle"/> <!-- p -->
            <ref name="covertitle"/> <!-- p -->
            <ref name="docauthor"/> <!-- p -->
            <!-- covertitle used in html/head/title when doctitle is not present -->
            <ref name="bridgehead"/> <!-- p -->
            <ref name="block"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
            <ref name="pagebreak.block"/> <!-- div -->
        </choice>
        <!-- common non-head elements for use with sectioning elements -->
    </define>
    
    <a:documentation>Generic Attributes</a:documentation>
    
    <define name="attr.id">
        <attribute name="id">
            <data type="ID"/>
        </attribute>
    </define>
    
    <define name="attr.title">
        <attribute name="title">
            <ref name="Text"/>
        </attribute>
    </define>
    
    <define name="attr.xmlspace">
        <attribute name="xml:space">
            <choice>
                <value>default</value>
                <value>preserve</value>
            </choice>
        </attribute>
    </define>
    
    <define name="attr.type">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
            </list>
        </attribute>
    </define>
    
    <define name="attr.class">
        <attribute name="class">
            <list>
                <ref name="classes"/>
            </list>
        </attribute>
    </define>

    <define name="attr.role">
        <attribute name="role">
            <list>
                <ref name="roles"/>
            </list>
        </attribute>
    </define>

    <define name="attr.aria.label">
        <attribute name="aria-label">
            <ref name="Text"/>
        </attribute>
    </define>

    <define name="attr.aria.labelledby">
        <attribute name="aria-labelledby">
            <ref name="Text"/>
        </attribute>
    </define>

    <define name="attr.aria.describedby">
        <attribute name="aria-describedby">
            <ref name="Text"/>
        </attribute>
    </define>

    <define name="coreattrs.base">
        <optional>
            <ref name="attr.id"/> <!-- @id -->
        </optional>
        <optional>
            <ref name="attr.title"/> <!-- @title -->
        </optional>
        <optional>
            <ref name="attr.xmlspace"/> <!-- @xml:space -->
        </optional>
        <optional>
            <ref name="attr.role"/> <!-- @role -->
        </optional>
        <optional>
            <ref name="attr.aria.label"/> <!-- @aria-label -->
        </optional>
        <optional>
            <ref name="attr.aria.labelledby"/> <!-- @aria-labelledby -->
        </optional>
        <optional>
            <ref name="attr.aria.describedby"/> <!-- @aria-describedby -->
        </optional>
    </define>

    <define name="coreattrs.notype">
        <ref name="coreattrs.base"/> <!-- @id, @title, @xml:space -->
        <optional>
            <ref name="attr.class"/> <!-- @class -->
        </optional>
    </define>

    <define name="coreattrs.noclass">
        <ref name="coreattrs.base"/> <!-- @id, @title, @xml:space -->
        <optional>
            <ref name="attr.type"/> <!-- @epub:type -->
        </optional>
    </define>

    <define name="coreattrs">
        <!--
        coreattrs are attributes permissible for most elements
        
        id       document-wide unique id
        class    space separated list of classes used for rendering
        title    advisory title/amplification
        xml:space    whitespace handling (see http://www.w3.org/TR/xml11/#sec-white-space)
        epub:type
        -->
        <ref name="coreattrs.base"/> <!-- @id, @title, @xml:space -->
        <optional>
            <ref name="attr.type"/> <!-- @epub:type -->
        </optional>
        <optional>
            <ref name="attr.class"/> <!-- @class -->
        </optional>
    </define>
    
    <define name="i18n">
        <a:documentation>i18n internationalization attributes.</a:documentation>
        <optional>
            <attribute name="xml:lang">
                <ref name="LanguageCode"/>
            </attribute>
            <attribute name="lang">
                <ref name="LanguageCode"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="dir">
                <choice>
                    <value>ltr</value>
                    <value>rtl</value>
                </choice>
            </attribute>
        </optional>
        <!--
        i18n internationalization attributes
            lang
            xml:lang    language code (as per XML 1.0 spec)
            dir         direction for weak/neutral text
                        ltr=left to right
                        rtl=right to left
        
        xhtml recommendation: use xml:lang such as "en-US", on the major
        containing block, to provide source language for
        the #IMPLIED values of its descendent elements.
        See [RFC1556] for handling bi-directional text in MIME.
      -->
    </define>
    
    <define name="attrs.base">
        <a:documentation>%attrs; is part of most attribute lists.</a:documentation>
        <ref name="coreattrs.base"/> <!-- @id, @title, @xml:space -->
        <ref name="i18n"/> <!-- @xml:lang, @lang, @dir -->
        <!-- the showin attribute in DTBook maps to the following classes in HTML: showin-xxx, showin-xxp, showin-xlx, showin-xlp, showin-bxx, showin-bxp, showin-blx, showin-blp -->
    </define>

    <define name="attrs.notype">
        <ref name="attrs.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
        <optional>
            <ref name="attr.class"/> <!-- @class -->
        </optional>
    </define>

    <define name="attrs.noclass">
        <ref name="attrs.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
        <optional>
            <ref name="attr.type"/> <!-- @epub:type -->
        </optional>
    </define>

    <define name="attrs">
        <!--
        %attrs; is part of most attribute lists. It includes
        
        %coreattrs; from which come the four #IMPLIED attributes as well as epub:type:
            id, class, title, xml:space, epub:type
        
        %i18n; from which come the implied attributes: xml:lang, lang and dir
        -->
        <ref name="attrs.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
        <optional>
            <ref name="attr.type"/> <!-- @epub:type -->
        </optional>
        <optional>
            <ref name="attr.class"/> <!-- @class -->
        </optional>
    </define>
    
    <define name="attrsrqd.base">
        <ref name="attr.id"/> <!-- @id -->
        <optional>
            <ref name="attr.title"/> <!-- @title -->
        </optional>
        <optional>
            <ref name="attr.xmlspace"/> <!-- @xml:space -->
        </optional>
        <optional>
            <ref name="attr.role"/> <!-- @role -->
        </optional>
        <optional>
            <ref name="attr.aria.label"/> <!-- @aria-label -->
        </optional>
        <optional>
            <ref name="attr.aria.labelledby"/> <!-- @aria-labelledby -->
        </optional>
        <optional>
            <ref name="attr.aria.describedby"/> <!-- @aria-describedby -->
        </optional>

        <ref name="i18n"/> <!-- @xml:lang, @lang, @dir -->
        <!-- the showin attribute in DTBook maps to the following classes in HTML: showin-xxx, showin-xxp, showin-xlx, showin-xlp, showin-bxx, showin-bxp, showin-blx, showin-blp -->
    </define>

    <define name="attrsrqd.notype">
        <ref name="attrsrqd.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
        <optional>
            <ref name="attr.class"/> <!-- @class -->
        </optional>
    </define>

    <define name="attrsrqd.noclass">
        <ref name="attrsrqd.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
        <optional>
            <ref name="attr.type"/> <!-- @epub:type -->
        </optional>
    </define>

    <define name="attrsrqd">
        <!--
        %attrsrqd; includes required id and implied class,
            title, and xml:space (see %coreattrs above)
        
        %i18n; from which come the implied attributes: xml:lang, lang and dir
        
        %externalnamespace; (See entity declaration)
        -->
        <ref name="attrsrqd.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
        <optional>
            <ref name="attr.type"/> <!-- @epub:type -->
        </optional>
        <optional>
            <ref name="attr.class"/> <!-- @class -->
        </optional>
    </define>
    
    <a:documentation>Document Structure</a:documentation>
    
    <define name="htmlcontent">
        <!--
        htmlContent designates that each html has a <head> of
        metainformation preceding the <book> content.
        -->
        <a:documentation>htmlContent designates that each html has a &lt;head&gt; of
            metainformation preceding the &lt;book&gt; content.</a:documentation>
        <ref name="head"/> <!-- head -->
        <ref name="document-content"/> <!-- body -->
    </define>
    
    <define name="html">
        <!--
        Use: html is the root element in the Digital Talking Book DTD.
        <html> contains metadata in <head> and the contents itself
        in <book>.
      -->
        <element name="html">
            <a:documentation>The HTML root element (&lt;html&gt;) represents the root of an HTML document. All other elements must be descendants of this element.</a:documentation>
            <!-- HTML content model: head body -->
            <!-- Strict content model: head body -->
            <optional>
                <attribute name="epub:prefix">
                    <a:documentation>content validated in schematron.</a:documentation>
                    <!-- content validated in schematron -->
                    <text/>
                </attribute>
            </optional>
            <ref name="attlist.html"/> <!-- @xml:lang, @lang, @dir -->
            <ref name="htmlcontent"/> <!-- head, body -->
        </element>
    </define>
    
    <define name="attlist.html" combine="interleave">
        <!--
        Attuse: html
        
        "version" is required, and contains the specific
        version of the dtd, so that the dtd version for any html can
        be recognized.
        
        "xmlns" is the URL where this dtd and its related materials can
        be found.
        
        "%i18n;" internationalization attributes characterize the <book>.
        Those values may be adjusted for language changes within it.
      -->
        <a:documentation>Attribute list</a:documentation>
        <ref name="i18n"/> <!-- @xml:lang, @lang, @dir -->
    </define>
    
    <a:documentation>Document Head Metadata</a:documentation>
    
    <define name="headmisc">
        <choice>
            <ref name="meta"/> <!-- meta -->
            <ref name="link"/> <!-- link -->
            <ref name="style"/> <!-- style -->
            <ref name="script"/> <!-- script -->
        </choice>
        <!-- optional head elements -->
    </define>
    
    <define name="head">
        <!--
        Use: head contains metainformation about the book but no
        actual content of the book itself, which is placed in <book>.
        This information is consonant with the <head> information
        in xhtml, see [XHTML11STRICT].
      -->
        <a:documentation>&lt;head&gt; contains metainformation about the book but no
            actual content of the book itself, which is placed in &lt;book&gt;.</a:documentation>
        <element name="head">
            <!-- HTML content model: title & base? & (link | meta | noscript | script | style | template)* -->
            <!-- Strict content model: meta[charset] title meta[name=viewport] meta[name=nordic:guidelines] (meta | link)* link[rel=profile]? -->
            <ref name="attlist.head"/> <!-- @xml:lang, @lang, @dir -->
            <element name="meta">
                <a:documentation>&lt;meta&gt; indicates metadata about the book. An empty
                    element that may appear repeatedly only in &lt;head&gt;.</a:documentation>
                <a:documentation>&lt;meta&gt; is the container for the Dublin Core attributes.</a:documentation>
                <attribute name="charset">
                    <value>UTF-8</value>
                </attribute>
            </element>
            <element name="title">
                <a:documentation>&lt;title&gt; is required and defines the title of a document.</a:documentation>
                <text/>
            </element>
            <element name="meta">
                <a:documentation>&lt;meta&gt; indicates metadata about the book. An empty
                    element that may appear repeatedly only in &lt;head&gt;.</a:documentation>
                <a:documentation>&lt;meta&gt; is the container for the Dublin Core attributes.</a:documentation>
                <attribute name="name">
                    <value>dc:identifier</value>
                </attribute>
                <attribute name="content">
                    <text/>
                </attribute>
            </element>
            <element name="meta">
                <a:documentation>&lt;meta&gt; indicates metadata about the book. An empty
                    element that may appear repeatedly only in &lt;head&gt;.</a:documentation>
                <a:documentation>&lt;meta&gt; is the container for the Dublin Core attributes.</a:documentation>
                <attribute name="name">
                    <value>viewport</value>
                </attribute>
                <attribute name="content">
                    <value>width=device-width</value>
                </attribute>
            </element>
            <zeroOrMore>
                <ref name="headmisc"/> <!-- meta, link, style, script -->
            </zeroOrMore>
        </element>
    </define>
    
    <define name="attlist.head" combine="interleave">
        <ref name="i18n"/> <!-- @xml:lang, @lang, @dir -->
        <!-- NOTE: profile moved to head as link element -->
    </define>
    
    <define name="link">
        <!--
        Use: link is an empty element appearing in the <head> section
        of a document that establishes a connection between the current
        document and another document. The <link> element conveys
        relationship information (for example, "next" and "previous") that
        may be rendered by user agents in a variety of ways.
      -->
        <a:documentation>&lt;link&gt; is an empty element appearing in the &lt;head&gt;section of a document.</a:documentation>
        <a:documentation>&lt;link&gt; establishes a connection between the current document and another document.</a:documentation>
        <element name="link">
            <ref name="attlist.link"/> <!-- @href, @hreflang, @type, @rel, @media, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <empty/>
        </element>
    </define>

    <define name="attlist.link" combine="interleave">
        <!--
        Attuse: link
        
        Each attribute use indicated by a parameter entity is
        defined in the comment following its definition.
        
        Attuse: head
        When rel="profile", href is points to a target that may provide
        additional information about the current document.
      -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <optional>
            <attribute name="href">
                <ref name="URI"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="hreflang">
                <ref name="LanguageCode"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="type">
                <ref name="ContentType"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="rel">
                <ref name="LinkTypes"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="media">
                <ref name="MediaDesc"/>
            </attribute>
        </optional>
    </define>
    
    <define name="meta">
        <!--
        Use: meta indicates metadata about the book. It is an empty
        element that may appear repeatedly only in <head>.
        Meta is the container for the Dublin Core attributes, 
        and the additional DTBook attributes.
        As a minumum the dc:Title and dtb:uid meta are required.
        Inclusion of the full range of applicable Dublin Core elements is 
        recommended, to make a DTBook document more useful as stand-alone 
        content.
        The Dublin Core specification is available at:
            http://purl.org/dc/
      -->
        <element name="meta">
            <ref name="attlist.meta"/> <!-- @http-equiv, @name, @content, @xml:lang, @lang, @dir -->
            <empty/>
        </element>
    </define>

    <define name="attlist.meta" combine="interleave">
        <!--
        Attuse: meta
        
        "http-equiv" connects the content attribute
        value to an http header field.
        
        "name" value identifies the specific kind of
        content value.
        
        "content" indicates the value for that "name",
        possibly constrained by the semantics for the individual names.
      -->
        <ref name="i18n"/> <!-- @xml:lang, @lang, @dir -->
        <optional>
            <attribute name="http-equiv">
                <data type="NMTOKEN"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="name">
                <data type="NMTOKEN"/>
            </attribute>
        </optional>
        <attribute name="content"/>
    </define>
    
    <define name="style">
        <element name="style">
            <ref name="attlist.style"/> <!-- @type, @media, @scoped, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <text/>
        </element>
    </define>
    
    <define name="attlist.style" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <attribute name="type"/>
        <optional>
            <attribute name="media"/>
        </optional>
        <optional>
            <attribute name="scoped"/>
        </optional>
    </define>
    
    <define name="script">
        <element name="script">
            <ref name="attlist.script"/> <!-- @type, @src, @async, @defer, @crossorigin, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <text/>
        </element>
    </define>
    
    <define name="attlist.script" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <optional>
            <attribute name="type"/>
        </optional>
        <optional>
            <attribute name="src"/>
        </optional>
        <optional>
            <attribute name="async"/>
        </optional>
        <optional>
            <attribute name="defer"/>
        </optional>
        <optional>
            <attribute name="crossorigin"/>
        </optional>
    </define>
    
    <a:documentation>Body Content</a:documentation>
    
    <define name="document-content">
        <!--
        Use: body surrounds the actual content of the document.
        <head>, which contains metadata, precedes <body>.
      -->
        <element name="body">
            <a:documentation>&lt;body&gt; surrounds the actual content of the document.</a:documentation>
            <a:documentation>&lt;head&gt;, which contains metadata, precedes &lt;body&gt;.</a:documentation>
            <!-- HTML content model: a & abbr & address & article & aside & audio & b & bdi & bdo & blockquote & br & button & canvas & cite & code & data & datalist & del & details & dfn & dialog & div & dl & em & embed & fieldset & figure & footer & form & h1 & h2 & h3 & h4 & h5 & h6 & header & hr & i & iframe & img & input & ins & kbd & keygen & label & link & main & map & mark & math & menu & meta & meter & nav & noscript & object & ol & output & p & pre & progress & q & ruby & s & samp & script & section & select & small & span & strong & style & sub & sup & svg & table & template & textarea & time & u & ul & var & video & wbr & (text) -->
            <!-- Strict content model: (h1 p)? (section | article) -->
            <choice>
                <group>
                    <!-- content document -->
                    <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
                    <element name="section">
                        <choice>
                           <ref name="cover"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, section -->
                           <ref name="frontmatter"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, div, h1, p, hr, ol, ul, dl, pre, blockquote, img, figure, section, span, table, address, aside, math, article -->
                           <ref name="bodymatter"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h1, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
                           <ref name="backmatter"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, div, h1, p, hr, ol, ul, dl, pre, blockquote, img, figure, section, span, table, address, aside, math, article -->
                        </choice>
                    </element>
                </group>
                <group>
                    <!-- navigation document -->
                    <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
                    <oneOrMore>
                        <element name="nav">
                            <a:documentation>navigation document.</a:documentation>
                            <attribute name="epub:type"/>
                            <optional>
                                <attribute name="hidden"/>
                            </optional>
                            <ref name="attr.role"/>
                            <optional>
                                <ref name="attr.aria.label"/>
                            </optional>
                            <optional>
                                <ref name="attr.aria.labelledby"/>
                            </optional>
                            <ref name="h1"/> <!-- h1 -->
                            <ref name="list"/> <!-- ol, ul -->
                        </element>
                    </oneOrMore>
                </group>
            </choice>
            <!-- (attributes and content is defined by cover/frontmatter/bodymatter/backmatter definitions) -->
            <zeroOrMore>
                <ref name="script"/> <!-- script -->
            </zeroOrMore>
        </element>
    </define>
    
    <a:documentation>Book Major Structures</a:documentation>
  
    <define name="cover">
            <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>cover</value>
                <ref name="types"/>
            </list>
        </attribute>
        <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <zeroOrMore>
            <element name="section">
                <attribute name="class">
                    <list>
                        <ref name="classes"/>
                        <choice>
                            <value>frontcover</value>
                            <value>rearcover</value>
                            <value>leftflap</value>
                            <value>rightflap</value>
                        </choice>
                        <ref name="classes"/>
                    </list>
                </attribute>
                <ref name="attrsrqd.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
                <ref name="level2.content.noattrs"/> <!-- h2, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
           </element>
        </zeroOrMore>
    </define>
    
    <define name="frontmatter">
        <!--
        Use: frontmatter usually contains <doctitle> and <docauthor>, as
        well as preliminary material that is often enclosed in appropriate
        <level> or <level1>. Content may include copyright notice, foreword,
        acknowledgments, table of contents, etc. <frontmatter> serves as a
        guide to the content and nature of a <book>.
      -->
        <a:documentation>&lt;frontmatter&gt; usually contains &lt;doctitle&gt; and &lt;docauthor&gt;</a:documentation>
        <a:documentation>Content may include copyright notice, foreword, acknowledgments, table of contents, etc.</a:documentation>
        <a:documentation>&lt;frontmatter&gt; serves as a guide to the content and nature of a &lt;book&gt;</a:documentation>
        <attribute name="epub:type">
            <choice>
                <list>
                    <ref name="types"/>
                    <value>frontmatter</value>
                    <ref name="types"/>
                    <ref name="frontmatter.types"/>
                    <ref name="types"/>
                </list>
                <list>
                    <ref name="types"/>
                    <ref name="frontmatter.types"/>
                    <ref name="types"/>
                    <value>frontmatter</value>
                    <ref name="types"/>
                </list>
            </choice>
        </attribute>
        <choice>
            <ref name="level1.only-headline"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, div, h1 -->
            <ref name="level1.content"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h1, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
        </choice>
    </define>

    <define name="frontmatter.types">
        <optional>
            <choice>
                <value>titlepage</value>
                <ref name="types.sectioning"/>
            </choice>
        </optional>
    </define>
    
    <define name="bodymatter">
        <!--
        Use: bodymatter consists of the text proper of a book, as contrasted
        with preliminary material <frontmatter> or supplementary information
        in <backmatter>.
      -->
        <!--
        HB: 2004-03-25 29: bodymatter: eliminate %block;
        level or level1 container is required.
      -->
        <a:documentation>&lt;bodymatter&gt; consists of the text proper of a book</a:documentation>
                <choice>
            <group>
                <attribute name="epub:type">
                    <choice>
                        <list>
                            <ref name="types"/>
                            <value>bodymatter</value>
                            <ref name="types"/>
                            <ref name="bodymatter.types"/>
                            <ref name="types"/>
                        </list>
                        <list>
                            <ref name="types"/>
                            <ref name="bodymatter.types"/>
                            <ref name="types"/>
                            <value>bodymatter</value>
                            <ref name="types"/>
                        </list>
                    </choice>
                </attribute>
                <ref name="level1.content"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h1, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </group>
            <group>
                <attribute name="epub:type">
                    <choice>
                        <list>
                            <ref name="types"/>
                            <value>bodymatter</value>
                            <ref name="types"/>
                            <value>part</value>
                            <ref name="types"/>
                        </list>
                        <list>
                            <ref name="types"/>
                            <value>part</value>
                            <ref name="types"/>
                            <value>bodymatter</value>
                            <ref name="types"/>
                        </list>
                    </choice>
                </attribute>
                <choice>
                    <ref name="level1.only-headline"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, div, h1 -->
                    <ref name="level1.content"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h1, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
                </choice>
            </group>
        </choice>
    </define>

    <define name="bodymatter.types">
        <ref name="types.sectioning"/>
    </define>
    
    <define name="backmatter">
        <!--
        Use: backmatter contains supplementary material such as
        appendices, glossaries, bibliographies, and indices. It follows
        the bodymatter of the book.
      --> 
        <a:documentation>&lt;backmatter&gt; contains supplementary material such as appendices, glossaries, bibliographies, indices.</a:documentation>
        <a:documentation>It follows the bodymatter of the book.</a:documentation>
        <attribute name="epub:type">
            <choice>
                <list>
                    <ref name="types"/>
                    <value>backmatter</value>
                    <ref name="types"/>
                    <ref name="backmatter.types"/>
                    <ref name="types"/>
                </list>
                <list>
                    <ref name="types"/>
                    <ref name="backmatter.types"/>
                    <ref name="types"/>
                    <value>backmatter</value>
                    <ref name="types"/>
                </list>
            </choice>
        </attribute>
        <choice>
            <ref name="level1.only-headline"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, div, h1 -->
            <ref name="level1.content"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h1, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
        </choice>
    </define>

    <define name="backmatter.types">
        <optional>
            <ref name="types.sectioning"/>
        </optional>
    </define>
    
    <a:documentation>Hierarchic Structure (6 levels deep)</a:documentation>
    
    <define name="level1">
        <a:documentation>Hierarchic Structure (6 levels deep).</a:documentation>
        <choice>
            <element name="section">
                <ref name="level1.content"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h1, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
            <element name="article">
                <!-- "article" should be used for magazine or newspaper articles. Otherwise, "section" should be used. -->
                <ref name="level1.content"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h1, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
        </choice>
    </define>

    <define name="level1.content">
        <ref name="attlist.level1"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <choice>
            <group>
                <choice>
                    <ref name="h1"/> <!-- h1 -->
                    <ref name="h2"/> <!-- h2 -->
                    <ref name="h3"/> <!-- h3 -->
                    <ref name="h4"/> <!-- h4 -->
                    <ref name="h5"/> <!-- h5 -->
                    <ref name="h6"/> <!-- h6 -->
                </choice>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level2"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
            </group>
            <group>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level2"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
                <optional>
                    <choice>
                        <ref name="h1"/> <!-- h1 -->
                        <ref name="h2"/> <!-- h2 -->
                        <ref name="h3"/> <!-- h3 -->
                        <ref name="h4"/> <!-- h4 -->
                        <ref name="h5"/> <!-- h5 -->
                        <ref name="h6"/> <!-- h6 -->
                    </choice>
                    <oneOrMore>
                        <choice>
                            <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                            <ref name="level2"/> <!-- section, article -->
                        </choice>
                    </oneOrMore>
                </optional>
            </group>
        </choice>
    </define>

    <define name="attlist.level1" combine="interleave">
        <ref name="attrsrqd.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="level1.only-headline">
        <ref name="attlist.level1"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <zeroOrMore>
            <ref name="pagebreak.block"/> <!-- div -->
        </zeroOrMore>
        <ref name="h1"/> <!-- h1 -->
    </define>
    
    <define name="level2">
        <a:documentation>Hierarchic Structure (6 levels deep).</a:documentation>
        <choice>
            <element name="section">
                <ref name="level2.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h2, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
            <element name="article">
                <!-- "article" should be used for magazine or newspaper articles. Otherwise, "section" should be used. -->
                <ref name="level2.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h2, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
        </choice>
    </define>

    <define name="level2.content">
        <ref name="attlist.level2"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <ref name="level2.content.noattrs"/> <!-- h2, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
    </define>

    <define name="level2.content.noattrs">
        <choice>
            <group>
                <choice>
                    <ref name="h2"/> <!-- h2 -->
                    <ref name="h3"/> <!-- h3 -->
                    <ref name="h4"/> <!-- h4 -->
                    <ref name="h5"/> <!-- h5 -->
                    <ref name="h6"/> <!-- h6 -->
                </choice>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level3"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
            </group>
            <group>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level3"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
                <optional>
                    <choice>
                        <ref name="h2"/> <!-- h2 -->
                        <ref name="h3"/> <!-- h3 -->
                        <ref name="h4"/> <!-- h4 -->
                        <ref name="h5"/> <!-- h5 -->
                        <ref name="h6"/> <!-- h6 -->
                    </choice>
                    <oneOrMore>
                        <choice>
                            <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                            <ref name="level3"/> <!-- section, article -->
                        </choice>
                    </oneOrMore>
                </optional>
            </group>
        </choice>
    </define>

    <define name="attlist.level2" combine="interleave">
        <optional>
            <attribute name="epub:type">
                <list>
                    <ref name="types"/>
                    <optional>
                        <ref name="types.sectioning"/>
                    </optional>
                    <ref name="types"/>
                </list>
            </attribute>
        </optional>
        <ref name="attrsrqd.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="level3">
        <a:documentation>Hierarchic Structure (6 levels deep).</a:documentation>
        <choice>
            <element name="section">
                <ref name="level3.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h3, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
            <element name="article">
                <!-- "article" should be used for magazine or newspaper articles. Otherwise, "section" should be used. -->
                <ref name="level3.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h3, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
        </choice>
    </define>

    <define name="level3.content">
        <ref name="attlist.level3"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <choice>
            <group>
                <choice>
                    <ref name="h3"/> <!-- h3 -->
                    <ref name="h4"/> <!-- h4 -->
                    <ref name="h5"/> <!-- h5 -->
                    <ref name="h6"/> <!-- h6 -->
                </choice>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level4"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
            </group>
            <group>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level4"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
                <optional>
                    <choice>
                        <ref name="h3"/> <!-- h3 -->
                        <ref name="h4"/> <!-- h4 -->
                        <ref name="h5"/> <!-- h5 -->
                        <ref name="h6"/> <!-- h6 -->
                    </choice>
                    <oneOrMore>
                        <choice>
                            <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                            <ref name="level4"/> <!-- section, article -->
                        </choice>
                    </oneOrMore>
                </optional>
            </group>
        </choice>
    </define>

    <define name="attlist.level3" combine="interleave">
        <optional>
            <attribute name="epub:type">
                <list>
                    <ref name="types"/>
                    <optional>
                        <ref name="types.sectioning"/>
                    </optional>
                    <ref name="types"/>
                </list>
            </attribute>
        </optional>
        <ref name="attrsrqd.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="level4">
        <a:documentation>Hierarchic Structure (6 levels deep).</a:documentation>
        <choice>
            <element name="section">
                <ref name="level4.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h4, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
            <element name="article">
                <!-- "article" should be used for magazine or newspaper articles. Otherwise, "section" should be used. -->
                <ref name="level4.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h4, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
        </choice>
    </define>

    <define name="level4.content">
        <ref name="attlist.level4"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <choice>
            <group>
                <choice>
                    <ref name="h4"/> <!-- h4 -->
                    <ref name="h5"/> <!-- h5 -->
                    <ref name="h6"/> <!-- h6 -->
                </choice>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level5"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
            </group>
            <group>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level5"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
                <optional>
                    <choice>
                        <ref name="h4"/> <!-- h4 -->
                        <ref name="h5"/> <!-- h5 -->
                        <ref name="h6"/> <!-- h6 -->
                    </choice>
                    <oneOrMore>
                        <choice>
                            <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                            <ref name="level5"/> <!-- section, article -->
                        </choice>
                    </oneOrMore>
                </optional>
            </group>
        </choice>
    </define>

    <define name="attlist.level4" combine="interleave">
        <optional>
            <attribute name="epub:type">
                <list>
                    <ref name="types"/>
                    <optional>
                        <ref name="types.sectioning"/>
                    </optional>
                    <ref name="types"/>
                </list>
            </attribute>
        </optional>
        <ref name="attrsrqd.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="level5">
        <a:documentation>Hierarchic Structure (6 levels deep).</a:documentation>
        <choice>
            <element name="section">
                <ref name="level5.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h5, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
            <element name="article">
                <!-- "article" should be used for magazine or newspaper articles. Otherwise, "section" should be used. -->
                <ref name="level5.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h5, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
        </choice>
    </define>

    <define name="level5.content">
        <ref name="attlist.level5"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <choice>
            <group>
                <choice>
                    <ref name="h5"/> <!-- h5 -->
                    <ref name="h6"/> <!-- h6 -->
                </choice>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level6"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
            </group>
            <group>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level6"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
                <optional>
                    <choice>
                        <ref name="h5"/> <!-- h5 -->
                        <ref name="h6"/> <!-- h6 -->
                    </choice>
                    <oneOrMore>
                        <choice>
                            <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                            <ref name="level6"/> <!-- section, article -->
                        </choice>
                    </oneOrMore>
                </optional>
            </group>
        </choice>
    </define>

    <define name="attlist.level5" combine="interleave">
        <optional>
            <attribute name="epub:type">
                <list>
                    <ref name="types"/>
                    <optional>
                        <ref name="types.sectioning"/>
                    </optional>
                    <ref name="types"/>
                </list>
            </attribute>
        </optional>
        <ref name="attrsrqd.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="level6">
        <a:documentation>Hierarchic Structure (6 levels deep).</a:documentation>
        <choice>
            <element name="section">
                <ref name="level6.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h6, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
            <element name="article">
                <!-- "article" should be used for magazine or newspaper articles. Otherwise, "section" should be used. -->
                <ref name="level6.content"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, h6, p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math, article -->
            </element>
        </choice>
    </define>

    <define name="level6.content">
        <ref name="attlist.level6"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <choice>
            <group>
                <ref name="h6"/> <!-- h6 -->
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level6"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
            </group>
            <group>
                <oneOrMore>
                    <choice>
                        <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="level6"/> <!-- section, article -->
                    </choice>
                </oneOrMore>
                <optional>
                    <ref name="h6"/> <!-- h6 -->
                    <oneOrMore>
                        <choice>
                            <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                            <ref name="level6"/> <!-- section, article -->
                        </choice>
                    </oneOrMore>
                </optional>
            </group>
        </choice>
    </define>

    <define name="attlist.level6" combine="interleave">
        <optional>
            <attribute name="epub:type">
                <list>
                    <ref name="types"/>
                    <optional>
                        <ref name="types.sectioning"/>
                    </optional>
                    <ref name="types"/>
                </list>
            </attribute>
        </optional>
        <ref name="attrsrqd.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <a:documentation>Text Markup</a:documentation>
    
    <define name="phrase">
        <a:documentation>STRICT NOTE: figure (i.e. images) is not allowed as "phrasing content" in HTML.</a:documentation>
        <choice>
            <ref name="em"/> <!-- em -->
            <ref name="strong"/> <!-- strong -->
            <ref name="dfn"/> <!-- dfn -->
            <ref name="code"/> <!-- code -->
            <ref name="samp"/> <!-- samp -->
            <ref name="kbd"/> <!-- kbd -->
            <ref name="cite"/> <!-- span -->
            <ref name="abbr"/> <!-- abbr -->
            <ref name="acronym"/> <!-- abbr -->
            <ref name="math"/> <!-- math -->
        </choice>
    </define>

    <define name="phrasenodfn">
        <choice>
            <ref name="em"/> <!-- em -->
            <ref name="strong"/> <!-- strong -->
            <ref name="code"/> <!-- code -->
            <ref name="samp"/> <!-- samp -->
            <ref name="kbd"/> <!-- kbd -->
            <ref name="cite"/> <!-- span -->
            <ref name="abbr"/> <!-- abbr -->
            <ref name="acronym"/> <!-- abbr -->
            <ref name="math"/> <!-- math -->
        </choice>
        <!-- inline text elements -->
    </define>
    
    <define name="special">
        <choice>
            <ref name="a"/> <!-- a -->
            <ref name="img"/> <!-- img -->
            <a:documentation>STRICT NOTE: figure (i.e. images) is not allowed as "phrasing content" in HTML.</a:documentation>
            <!-- STRICT NOTE: figure (i.e. images) is not allowed as "phrasing content" in HTML -->
            <ref name="br"/> <!-- br -->
            <ref name="q"/> <!-- q -->
            <ref name="sub"/> <!-- sub -->
            <ref name="sup"/> <!-- sup -->
            <ref name="span"/> <!-- span -->
            <ref name="bdo"/> <!-- bdo -->
            <ref name="math"/> <!-- math -->
        </choice>
        <!-- special inline text elements -->
    </define>
    
    <define name="specialnoa">
        <choice>
            <ref name="img"/> <!-- img -->
            <a:documentation>STRICT NOTE: figure (html: imggroup) is not allowed as "phrasing content" in HTML</a:documentation>
            <!-- STRICT NOTE: figure (html: imggroup) is not allowed as "phrasing content" in HTML -->
            <ref name="br"/> <!-- br -->
            <ref name="q"/> <!-- q -->
            <ref name="sub"/> <!-- sub -->
            <ref name="sup"/> <!-- sup -->
            <ref name="span"/> <!-- span -->
            <ref name="bdo"/> <!-- bdo -->
            <ref name="math"/> <!-- math -->
        </choice>
        <!-- specialnoa inline text elements for anchor <a> -->
    </define>
    
    <a:documentation>Inline Entities</a:documentation>
    
    <define name="htmlinline">
        <choice>
            <ref name="htmlinlinenoa"/> <!-- span -->
            <ref name="annoref"/> <!-- a -->
            <ref name="noteref"/> <!-- a -->
        </choice>
    </define>

    <define name="htmlinlinenoa">
        <choice>
            <ref name="lic"/>
            <ref name="sent"/> <!-- span -->
            <ref name="w"/> <!-- span -->
            <ref name="pagebreak.inline"/> <!-- span -->
            <!-- STRICT NOTE: The DTBook element "prodnote" is mapped to "aside" in HTML, which is not allowed as HTML "phrasing content". This means that prodnotes must not be allowed to be placed as inline content in DTBook. -->
            <!-- STRICT NOTE: The DTBook elements "annoref" and "noteref" is mapped to "a" in HTML. In HTML, "a" cannot have "a" descendants which means html:annorefs and html:noterefs must be disallowed inside html:a elements. -->
        </choice>
        <!-- html added inline text elements -->
    </define>
    
    <define name="inline">
        <choice>
            <text/>
            <ref name="phrase"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math -->
            <ref name="special"/> <!-- a, img, br, q, sub, sup, span, bdo, math -->
            <ref name="htmlinline"/> <!-- span, a -->
        </choice>
        <!-- inline text elements -->
    </define>
    
    <define name="inlinenoa">
        <choice>
            <text/>
            <ref name="phrase"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math -->
            <ref name="specialnoa"/> <!-- img, br, q, sub, sup, span, bdo, math -->
            <ref name="htmlinlinenoa"/> <!-- span -->
        </choice>
    </define>

    <define name="inlinenodfn">
        <choice>
            <text/>
            <ref name="phrasenodfn"/> <!-- em, strong, code, samp, kbd, span, abbr, math -->
            <ref name="special"/> <!-- a, img, br, q, sub, sup, span, bdo, math -->
            <ref name="htmlinlinenoa"/> <!-- span -->
        </choice>
        <!-- inlinenoa excludes nested <a> -->
    </define>
    
    <define name="inlines">
        <choice>
            <text/>
            <ref name="phrase"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math -->
            <ref name="special"/> <!-- a, img, br, q, sub, sup, span, bdo, math -->
            <ref name="pagebreak.inline"/> <!-- span -->
            <ref name="w"/> <!-- span -->
            <ref name="prodnote"/> <!-- aside -->
            <ref name="annoref"/> <!-- a -->
            <ref name="noteref"/> <!-- a -->
        </choice>
        <!-- inlines excludes direct nesting of sentences (z3998:sentence) -->
    </define>
    
    <define name="inlinew">
        <choice>
            <text/>
            <ref name="phrase"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math -->
            <ref name="special"/> <!-- a, img, br, q, sub, sup, span, bdo, math -->
        </choice>
        <!-- inlinew for word z3998:word excludes any of the "htmlinline" content -->
    </define>
    
    <define name="inlinenopagebreak">
        <a:documentation>inlinenopagebreak excludes pagebreaks directly inside table, th and td.</a:documentation>
        <choice>
            <text/>
            <ref name="phrase"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math -->
            <ref name="special"/> <!-- a, img, br, q, sub, sup, span, bdo, math -->
            <ref name="sent"/> <!-- span -->
            <ref name="w"/> <!-- span -->
            <ref name="annoref"/> <!-- a -->
            <ref name="noteref"/> <!-- a -->
        </choice>
        <!-- inlinenopagebreak excludes pagebreaks directly inside <table>, <th> and <td>. -->
    </define>
    
    <define name="inlinenoprodnote">
        <a:documentation>inlinenoprodnote excludes production, used so that they don't nest </a:documentation>
        <choice>
            <text/>
            <ref name="phrase"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math -->
            <ref name="special"/> <!-- a, img, br, q, sub, sup, span, bdo, math -->
            <ref name="sent"/> <!-- span -->
            <ref name="w"/> <!-- span -->
            <ref name="pagebreak.inline"/> <!-- span -->
            <ref name="annoref"/> <!-- a -->
            <ref name="noteref"/> <!-- a -->
        </choice>
        <!-- inlinenoprodnote excludes z3998:production, used so that they don't nest -->
    </define>
    
    <a:documentation>Flow (Block or Inline) Entities</a:documentation>
    
    <define name="flow">
        <a:documentation>flow elements add inlinenoprodnote to block.</a:documentation>
        <choice>
            <zeroOrMore>
                <ref name="inlinenoprodnote"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
            <zeroOrMore>
                <choice>
                    <ref name="blocknoimggroup"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, section, span, table, address, aside, figure, math -->
                    <a:documentation>STRICT NOTE: "figure" is not allowed in HTML as inline content so it is not included -  </a:documentation>
                    <a:documentation>- in "inlinenoprodnote". We explicitly include it here instead. </a:documentation>
                    <!-- STRICT NOTE: "figure" is not allowed in HTML as inline content so it is not included in "inlinenoprodnote". We explicitly include it here instead. -->
                    <ref name="figure.imggroup"/> <!-- figure -->
                </choice>
            </zeroOrMore>
        </choice>
        <!-- flow elements add inlinenoprodnote to block -->
    </define>
    
    <define name="flowtd">
        <a:documentation>flowtd ideally excludes pagebreak other than at the end of the content, although</a:documentation>
        <a:documentation>- it can get in indirectly through elements of %blocknoimggroup; </a:documentation>
        <choice>
            <group>
                <zeroOrMore>
                    <ref name="inlinenoprodnote"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                </zeroOrMore>
            </group>
            <group>
                <zeroOrMore>
                    <choice>
                        <ref name="blocknoimggroup"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, section, span, table, address, aside, figure, math -->
                        <a:documentation>STRICT NOTE: "figure" is not allowed in HTML as inline content so it is not included -  </a:documentation>
                        <a:documentation>- in "inlinenoprodnote". We explicitly include it here instead. </a:documentation>
                        <!-- STRICT NOTE: "figure" is not allowed in HTML as inline content so it is not included in "inlinenoprodnote". We explicitly include it here instead. -->
                        <ref name="figure.imggroup"/> <!-- figure -->
                    </choice>
                </zeroOrMore>
                <optional>
                    <ref name="pagebreak.block"/> <!-- div -->
                </optional>
            </group>
        </choice>
        <!--
          flowtd ideally excludes pagebreak other than at the end of the content, although
          it can get in indirectly through elements of %blocknoimggroup;
        -->
    </define>
    
    <define name="flownotable">
        <choice>
            <zeroOrMore>
                <ref name="inlinenoprodnote"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
            <zeroOrMore>
                <choice>
                    <ref name="blocknoimggroupnotable"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, section, span, address, aside, figure, math -->
                    <a:documentation>STRICT NOTE: "figure" is not allowed in HTML as inline content so it is not included -  </a:documentation>
                    <a:documentation>- in "inlinenoprodnote". We explicitly include it here instead. </a:documentation>
                    <!-- STRICT NOTE: "figure" is not allowed in HTML as inline content so it is not included in "inlinenoprodnote". We explicitly include it here instead. -->
                    <ref name="figure.imggroup"/> <!-- figure -->
                </choice>
            </zeroOrMore>
        </choice>
    </define>

    <define name="flowlic">
        <choice>
            <zeroOrMore>
                <choice>
                    <ref name="inlinenoprodnote"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                    <ref name="lic"/> <!-- span -->
                    <ref name="list"/> <!-- ol, ul -->
                    <ref name="pagebreak.inline"/> <!-- div -->
                </choice>
            </zeroOrMore>
            <zeroOrMore>
                <choice>
                    <ref name="blocknoimggroup"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, section, span, table, address, aside, figure, math -->
                    <ref name="pagebreak.block"/> <!-- div -->
                    <a:documentation>STRICT NOTE: "figure" is not allowed in HTML as inline content so it is not included -  </a:documentation>
                    <a:documentation>- in "inlinenoprodnote". We explicitly include it here instead. </a:documentation>
                    <!-- STRICT NOTE: "figure" is not allowed in HTML as inline content so it is not included in "inlinenoprodnote". We explicitly include it here instead. -->
                    <ref name="figure.imggroup"/> <!-- figure -->
                </choice>
            </zeroOrMore>
        </choice>
    </define>
    
    <a:documentation>Br, Line, Linenum, Address, and Div Content Models</a:documentation>
    
    <define name="br">
        <!-- Use: br marks a forced line break. -->
        <a:documentation>Use: br marks a forced line break. </a:documentation>
        <element name="br">
            <ref name="attlist.br"/> <!-- @id, @title, @xml:space, @epub:type, @class -->
            <empty/>
        </element>
    </define>

    <define name="attlist.br" combine="interleave">
        <!--
        Attuse: br
        
        The %coreattrs; only appear, as there is no content
        to which the more general %attrs; apply.
      -->
        <a:documentation> The %coreattrs; only appear, as there is no content </a:documentation>
        <a:documentation> to which the more general %attrs; apply.</a:documentation>
        <ref name="coreattrs"/> <!-- @id, @title, @xml:space, @epub:type, @class -->
    </define>
    
    <define name="line">
        <!--
        Use: line marks a single logical line of text. Often used in
        conjunction with linenum in documents with numbered lines.
      -->
        <a:documentation> Use: line marks a single logical line of text. Often used in</a:documentation>
        <a:documentation>  conjunction with linenum in documents with numbered lines..</a:documentation>
        <element name="p">
            <!-- HTML content model: (a | abbr | audio | b | bdi | bdo | br | button | canvas | cite | code | data | datalist | del | dfn | em | embed | i | iframe | img | input | ins | kbd | keygen | label | link | map | mark | math | meta | meter | noscript | object | output | progress | q | ruby | s | samp | script | select | small | span | strong | sub | sup | svg | template | textarea | time | u | var | video | wbr | (text))* -->
            <!-- Strict content model: (em | strong | dfn | code | samp | kbd | abbr | a | img | br | q | sub | sup | span | bdo | (text))* -->
            <ref name="attlist.line"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
            <optional>
                <ref name="linenum"/> <!-- span -->
            </optional>
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.line" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>line</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>
    
    <define name="linenum">
        <!-- Use: linenum contains a line number, for example in legal text, or <poem>. -->
        <a:documentation> Use: linenum contains a line number, for example in legal text, or poem. </a:documentation>
        <element name="span">
            <attribute name="class">
                <list>
                    <ref name="classes"/>
                    <value>linenum</value>
                    <ref name="classes"/>
                </list>
            </attribute>
            <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
            <text/>
        </element>
    </define>
    
    <define name="address">
        <!--
        Use: address contains a location at which a person or agency
        may be contacted. By use of <p class="line"> to contain content of the
        individual lines, the class attribute can also be used to identify
        the content of that "line". For example, class values might include:
        name, address, region (state. province, etc.), country, location
        code (such as zipcode, provincial code), phone, fax, email, etc.
      -->
        <a:documentation> Use: address contains a location at which a person or agency may be contacted.</a:documentation>
        <element name="address">
            <!-- HTML content model: (a | abbr | audio | b | bdi | bdo | blockquote | br | button | canvas | cite | code | data | datalist | del | details | dfn | dialog | div | dl | em | embed | fieldset | figure | form | hr | i | iframe | img | input | ins | kbd | keygen | label | link | main | map | mark | math | menu | meta | meter | noscript | object | ol | output | p | pre | progress | q | ruby | s | samp | script | select | small | span | strong | style | sub | sup | svg | table | template | textarea | time | u | ul | var | video | wbr | (text))* -->
            <!-- Strict content model: (p | em | strong | dfn | code | samp | kbd | abbr | a | img | br | q | sub | sup | span | bdo | (text))* -->
            <ref name="attlist.address"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <choice>
                <zeroOrMore>
                    <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                </zeroOrMore>
                <zeroOrMore>
                    <ref name="line"/> <!-- p -->
                </zeroOrMore>
            </choice>
        </element>
    </define>

    <define name="attlist.address" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="div">
        <!--
        Use: div is a generic container for subdivisions of content. The
        <section> hierarchy, should mark the major hierarchical structures of a book,
        while <div> is used in less formal circumstances or when for production purposes
        it is desired that a structure should be treated differently.
        Compare with <span>, which is used in inline settings.
      -->
        <a:documentation>Use: div is a generic container for subdivisions of content. The section hierarchy</a:documentation>
        <a:documentation> should mark the major hierarchical structures of a book,while div is used in less formal</a:documentation>
        <a:documentation> circumstances or when for production purposes it is desired that a structure should be treated </a:documentation>
        <a:documentation>differently.Compare with span, which is used in inline settings.</a:documentation>
        <element name="div">
            <!-- HTML content model: (a | abbr | address | article | aside | audio | b | bdi | bdo | blockquote | br | button | canvas | cite | code | data | datalist | del | details | dfn | dialog | div | dl | em | embed | fieldset | figure | footer | form | h1 | h2 | h3 | h4 | h5 | h6 | header | hr | i | iframe | img | input | ins | kbd | keygen | label | link | main | map | mark | math | menu | meta | meter | nav | noscript | object | ol | output | p | pre | progress | q | ruby | s | samp | script | section | select | small | span | strong | style | sub | sup | svg | table | template | textarea | time | u | ul | var | video | wbr | (text))* -->
            <!-- Strict content model: (h1 | p | ol | ul | dl | div | blockquote | img | figure | table | address | span | aside | section | a | samp | kbd)+ -->
            <!-- STRICT NOTE: there has to be at least one child inside div. Text content is not allowed; text has to be wrapped in one of the inline elements. -->
            <ref name="attlist.div"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <oneOrMore>
                <ref name="docblockorinline"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
            </oneOrMore>
        </element>
    </define>

    <define name="attlist.div" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <a:documentation>Block Elements: Title, Author, Prodnote, Sidebar</a:documentation>
    
    <define name="inlinetitle">
        <element name="span">
            <ref name="title.content"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
        </element>
    </define>

    <define name="title">
        <a:documentation>Headline</a:documentation>
        <!-- HTML content model: (a | abbr | audio | b | bdi | bdo | br | button | canvas | cite | code | data | datalist | del | dfn | em | embed | i | iframe | img | input | ins | kbd | keygen | label | link | map | mark | math | meta | meter | noscript | object | output | progress | q | ruby | s | samp | script | select | small | span | strong | sub | sup | svg | template | textarea | time | u | var | video | wbr | (text))* -->
        <!-- Strict content model: (em | strong | dfn | code | samp | kbd | abbr | a | img | br | q | sub | sup | span | bdo | (text))* -->
        <choice>
            <element name="h1">
                <ref name="title.content"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </element>
            <element name="h2">
                <ref name="title.content"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </element>
            <element name="h3">
                <ref name="title.content"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </element>
            <element name="h4">
                <ref name="title.content"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </element>
            <element name="h5">
                <ref name="title.content"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </element>
            <element name="h6">
                <ref name="title.content"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </element>
        </choice>
    </define>

    <define name="title.content">
        <ref name="attlist.title"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
        <zeroOrMore>
            <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
        </zeroOrMore>
    </define>

    <define name="attlist.title" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>title</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>
    
    <!-- Use: author identifies the writer of a work. -->
    <define name="author.inline">
        <a:documentation>Use: author identifies the writer of a work.</a:documentation>
        <element name="span">
            <ref name="author"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
        </element>
    </define>

    <define name="author.block">
        <element name="p">
            <ref name="author"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class, em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
        </element>
    </define>

    <define name="author">
        <!-- HTML content model: (a | abbr | audio | b | bdi | bdo | br | button | canvas | cite | code | data | datalist | del | dfn | em | embed | i | iframe | img | input | ins | kbd | keygen | label | link | map | mark | math | meta | meter | noscript | object | output | progress | q | ruby | s | samp | script | select | small | span | strong | sub | sup | svg | template | textarea | time | u | var | video | wbr | (text))* -->
        <!-- Strict content model: (em | strong | dfn | code | samp | kbd | abbr | a | img | br | q | sub | sup | span | bdo | (text))* -->
        <ref name="attlist.author"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <zeroOrMore>
            <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
        </zeroOrMore>
    </define>

    <define name="attlist.author" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>z3998:author</value>
                <ref name="types"/>
            </list>
        </attribute>
        <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="prodnote">
        <!--
        Use: prodnote contains language added to the alternative-format
        version by the producer; commonly used to:
        1) provide descriptions of one or more visual elements such
            as charts, graphs, etc.
        2) supply operating instructions
        3) describe differences between the print book and the audio
        version.
      -->
        <a:documentation>Use: prodnote contains language added to the alternative-format version by the producer; </a:documentation>
        <a:documentation>commonly used to:</a:documentation>
        <a:documentation>1) provide descriptions of one or more visual elements such as charts, graphs, etc.</a:documentation>
        <a:documentation>2) supply operating instructions.</a:documentation>
        <a:documentation> 3) describe differences between the print book and the audio version.</a:documentation>
        <element name="aside">
            <!-- HTML content model: (a | abbr | address | article | aside | audio | b | bdi | bdo | blockquote | br | button | canvas | cite | code | data | datalist | del | details | dfn | dialog | div | dl | em | embed | fieldset | figure | footer | form | h1 | h2 | h3 | h4 | h5 | h6 | header | hr | i | iframe | img | input | ins | kbd | keygen | label | link | main | map | mark | math | menu | meta | meter | nav | noscript | object | ol | output | p | pre | progress | q | ruby | s | samp | script | section | select | small | span | strong | style | sub | sup | svg | table | template | textarea | time | u | ul | var | video | wbr | (text))* -->
            <!-- Strict content model: (em | strong | dfn | code | samp | kbd | abbr | a | img | figure | br | q | sub | sup | span | bdo | p | ol | ul | dl | div | blockquote | table | address | (text))* -->
            <ref name="attlist.prodnote"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
        </element>
    </define>

    <define name="attlist.prodnote" combine="interleave">
        <!--
            NOTE: an alternative would be to use aria-describedat, linking from the image to the prodnote:
            https://dvcs.w3.org/hg/aria-unofficial/raw-file/tip/describedat.html
        -->
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>z3998:production</value>
                <ref name="types"/>
            </list>
        </attribute>
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>prodnote</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrsrqd.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
    </define>
    
    <define name="sidebar">
        <!--
        Use: aside epub:type="sidebar" contains information supplementary to the main
        text and/or narrative flow and is often boxed and printed apart
        from the main text block on a page. It may have a heading <hd>.
      -->
        <a:documentation> Use: aside epub:type="sidebar" contains information supplementary to the main</a:documentation>
        <a:documentation>text and/or narrative flow and is often boxed and printed apart</a:documentation>
        <a:documentation>from the main text block on a page. It may have a heading hd.</a:documentation>
        <choice>
            <element name="aside">
                <!-- HTML content model: (a | abbr | address | article | aside | audio | b | bdi | bdo | blockquote | br | button | canvas | cite | code | data | datalist | del | details | dfn | dialog | div | dl | em | embed | fieldset | figure | footer | form | h1 | h2 | h3 | h4 | h5 | h6 | header | hr | i | iframe | img | input | ins | kbd | keygen | label | link | main | map | mark | math | menu | meta | meter | nav | noscript | object | ol | output | p | pre | progress | q | ruby | s | samp | script | section | select | small | span | strong | style | sub | sup | svg | table | template | textarea | time | u | ul | var | video | wbr | (text))* -->
                <!-- Strict content model: (h1 | em | strong | dfn | code | samp | kbd | abbr | a | img | figure | br | q | sub | sup | span | bdo | p | ol | ul | dl | div | blockquote | table | address | (text))* -->
                <ref name="attlist.sidebar"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
                <optional>
                    <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
                </optional>
                <optional>
                    <ref name="hd"/> <!-- h1, h2, h3, h4, h5, h6 -->
                </optional>
                <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
            </element>
        </choice>

    </define>

    <define name="attlist.sidebar" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>text-box</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrsrqd.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
    </define>
    
    <define name="note">
        <!--
        Use: note marks a footnote, endnote, etc. Any local reference to
        <note id="yyy"> is by <noteref idref="#yyy">.
      -->
        <a:documentation>   Use: note marks a footnote, endnote, etc. Any local reference to</a:documentation>
        <a:documentation> note id="yyy" is by noteref idref="#yyy".</a:documentation>
        <element name="aside">
            <!-- HTML content model: (a | abbr | address | article | aside | audio | b | bdi | bdo | blockquote | br | button | canvas | cite | code | data | datalist | del | details | dfn | dialog | div | dl | em | embed | fieldset | figure | footer | form | h1 | h2 | h3 | h4 | h5 | h6 | header | hr | i | iframe | img | input | ins | kbd | keygen | label | link | main | map | mark | math | menu | meta | meter | nav | noscript | object | ol | output | p | pre | progress | q | ruby | s | samp | script | section | select | small | span | strong | style | sub | sup | svg | table | template | textarea | time | u | ul | var | video | wbr | (text))* -->
            <!-- Strict content model: (p | ol | ul | dl | div | blockquote | img | figure | table | address | span | aside | section | a | samp | kbd)+ -->
            <ref name="attlist.note"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <choice>
                <oneOrMore>
                    <choice>
                        <ref name="block"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="pagebreak.block"/> <!-- div -->
                    </choice>
                </oneOrMore>
                <oneOrMore>
                    <ref name="inlineinblock"/> <!-- a, span, samp, kbd -->
                </oneOrMore>
            </choice>
        </element>
    </define>

    <define name="attlist.note" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>footnote</value>
                <ref name="types"/>
            </list>
        </attribute>
        <optional>
            <attribute name="class">
                <list>
                    <ref name="classes"/>
                </list>
            </attribute>
        </optional>
        <ref name="attrsrqd.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
    </define>
    
    <define name="annotation">
        <!--
        Use: annotation is a comment on or explanation of a portion of
        a printed book. It differs from <note> in that an <annotation>
        is usually set in the margin or on a facing page, often with
        no explicit reference to it inserted in the text. Any local
        reference to <annotation id="xxx"> is by <annoref idref="#xxx">.
      -->
        <a:documentation> Use: annotation is a comment on or explanation of a portion of a printed book. </a:documentation>
        <a:documentation> It differs from note in that an annotation is usually set in the margin or on a facing page, </a:documentation>
        <a:documentation> often with no explicit reference to it inserted in the text. </a:documentation>
        <a:documentation> Any local reference to annotation id="xxx" is by annoref idref="#xxx".</a:documentation>
        <element name="aside">
            <!-- HTML content model: (a | abbr | address | article | aside | audio | b | bdi | bdo | blockquote | br | button | canvas | cite | code | data | datalist | del | details | dfn | dialog | div | dl | em | embed | fieldset | figure | footer | form | h1 | h2 | h3 | h4 | h5 | h6 | header | hr | i | iframe | img | input | ins | kbd | keygen | label | link | main | map | mark | math | menu | meta | meter | nav | noscript | object | ol | output | p | pre | progress | q | ruby | s | samp | script | section | select | small | span | strong | style | sub | sup | svg | table | template | textarea | time | u | ul | var | video | wbr | (text))* -->
            <!-- Strict content model: (p | ol | ul | dl | div | blockquote | img | figure | table | address | span | aside | section | a | samp | kbd)+ -->
            <ref name="attlist.annotation"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <choice>
                <oneOrMore>
                    <choice>
                        <ref name="block"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                        <ref name="pagebreak.block"/> <!-- div -->
                    </choice>
                </oneOrMore>
                <oneOrMore>
                    <ref name="inlineinblock"/> <!-- a, span, samp, kbd -->
                </oneOrMore>
            </choice>
        </element>
    </define>

    <define name="attlist.annotation" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>annotation</value>
                <ref name="types"/>
            </list>
        </attribute>
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>annotation</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrsrqd.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
    </define>
    
    <a:documentation>Byline, Epigraph, Dateline</a:documentation>
    
    <define name="epigraph">
        <!--
        Use: epigraph marks a quotation placed at the beginning of a work
        or a division of a work.
      -->
        <a:documentation>  Use: epigraph marks a quotation placed at the beginning of a work or a division of a work.</a:documentation>
        <choice>
            <element name="blockquote">
                <!-- HTML content model: (a | abbr | audio | b | bdi | bdo | br | button | canvas | cite | code | data | datalist | del | dfn | em | embed | i | iframe | img | input | ins | kbd | keygen | label | link | map | mark | math | meta | meter | noscript | object | output | progress | q | ruby | s | samp | script | select | small | span | strong | sub | sup | svg | template | textarea | time | u | var | video | wbr | (text))* -->
                <!-- Strict content model: (em | strong | dfn | code | samp | kbd | abbr | a | img | br | q | sub | sup | span | bdo | (text))* -->
                <ref name="attlist.epigraph"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
                <zeroOrMore>
                    <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
                </zeroOrMore>
            </element>
            <element name="p"> <!-- for backwards compatibility we still allow p -->
                <ref name="attlist.epigraph"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
                <zeroOrMore>
                   <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                </zeroOrMore>
            </element>
        </choice>
    </define>

    <define name="attlist.epigraph" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>epigraph</value>
                <ref name="types"/>
            </list>
        </attribute>
        <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="byline">
        <!--
        Use: byline contains information about the creator of or contributor
        to a work. 
      -->
        <a:documentation>  Use: byline contains information about the creator of or contributor to a work. </a:documentation>
        <element name="span">
            <!-- HTML content model: (a | abbr | audio | b | bdi | bdo | br | button | canvas | cite | code | data | datalist | del | dfn | em | embed | i | iframe | img | input | ins | kbd | keygen | label | link | map | mark | math | meta | meter | noscript | object | output | progress | q | ruby | s | samp | script | select | small | span | strong | sub | sup | svg | template | textarea | time | u | var | video | wbr | (text))* -->
            <!-- Strict content model: (em | strong | dfn | code | samp | kbd | abbr | a | img | br | q | sub | sup | span | bdo | (text))* -->
            <ref name="attlist.byline"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.byline" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>byline</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>
    
    <define name="dateline"> 
        <!--
        Use: dateline contains information about the time and/or place at which
        a work was authored. 
      -->
        <!-- MM: 2005-04-22 dateline - changed ATTLIST to %attrs; -->
        <a:documentation>  Use: dateline contains information about the time and/or place at which a work was authored.  </a:documentation>
        <element name="span">
            <!-- HTML content model: (a | abbr | audio | b | bdi | bdo | br | button | canvas | cite | code | data | datalist | del | dfn | em | embed | i | iframe | img | input | ins | kbd | keygen | label | link | map | mark | math | meta | meter | noscript | object | output | progress | q | ruby | s | samp | script | select | small | span | strong | sub | sup | svg | template | textarea | time | u | var | video | wbr | (text))* -->
            <!-- Strict content model: (em | strong | dfn | code | samp | kbd | abbr | a | img | br | q | sub | sup | span | bdo | (text))* -->
            <ref name="attlist.dateline"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.dateline" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>dateline</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>
    
    <a:documentation>Poem, Linegroup</a:documentation>
    
    <define name="linegroup">
        <!-- Use: linegroup provides means to group a set of lines of a poem. -->
        <a:documentation>  Use: linegroup provides means to group a set of lines of a poem.  </a:documentation>
        <!-- linegroups with headlines must be section elements; otherwise they must be div elements -->
        <choice>
            <element name="div">
                <ref name="attrs.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
                <ref name="attlist.linegroup"/> <!-- @class, @epub:type -->
                <ref name="linegroup.common"/> <!-- span, blockquote, p, div, section, aside, a, hr, ol, ul, dl, pre, img, figure, math -->
            </element>
            <element name="section">
                <ref name="attrsrqd.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
                <ref name="attlist.linegroup"/> <!-- @class, @epub:type -->
                <ref name="linegroup.common"/> <!-- span, blockquote, p, div, section, aside, a, hr, ol, ul, dl, pre, img, figure, math -->
                <ref name="hd"/> <!-- h1, h2, h3, h4, h5, h6 -->
                <ref name="linegroup.common"/> <!-- span, blockquote, p, div, section, aside, a, hr, ol, ul, dl, pre, img, figure, math -->
            </element>
        </choice>
    </define>

    <define name="linegroup.common">
        <!-- HTML content model: (a | abbr | address | article | aside | audio | b | bdi | bdo | blockquote | br | button | canvas | cite | code | data | datalist | del | details | dfn | dialog | div | dl | em | embed | fieldset | figure | footer | form | h1 | h2 | h3 | h4 | h5 | h6 | header | hr | i | iframe | img | input | ins | kbd | keygen | label | link | main | map | mark | math | menu | meta | meter | nav | noscript | object | ol | output | p | pre | progress | q | ruby | s | samp | script | section | select | small | span | strong | style | sub | sup | svg | table | template | textarea | time | u | ul | var | video | wbr | (text))* -->
        <!-- Strict content model: (h1 | span | p | section | aside | a | ul | ol | dl | blockquote | img | figure)* -->
        <zeroOrMore>
            <choice>
                <ref name="dateline"/> <!-- span -->
                <ref name="epigraph"/> <!-- blockquote, p -->
                <ref name="byline"/> <!-- span -->
                <ref name="linegroup"/> <!-- div, section -->
                <ref name="line"/> <!-- p -->
                <ref name="pagebreak.block"/> <!-- div -->
                <ref name="prodnote"/> <!-- aside -->
                <ref name="noteref"/> <!-- a -->
                <ref name="annoref"/> <!-- a -->
                <ref name="note"/> <!-- aside -->
                <ref name="annotation"/> <!-- aside -->
                <ref name="p"/> <!-- p, hr, ol, ul, dl -->
                <ref name="pre"/> <!-- pre -->
                <ref name="blockquote"/> <!-- blockquote -->
                <ref name="img"/> <!-- img -->
                <ref name="figure.imggroup"/> <!-- figure -->
                <ref name="math"/> <!-- math -->
            </choice>
        </zeroOrMore>
    </define>

    <define name="attlist.linegroup" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>linegroup</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <optional>
            <attribute name="epub:type">
                <list>
                    <ref name="types"/>
                    <optional>
                        <value>z3998:verse</value>
                    </optional>
                    <ref name="types"/>
                </list>
            </attribute>
        </optional>
    </define>

    <define name="poem">
        <a:documentation>  Use: poem is a complete poem or fragment thereof.  </a:documentation>
        <element name="div">
            <ref name="attrs.base"/>
            <attribute name="class">
                <choice>
                    <value>verse</value>
                    <value>line-by-line</value>
                </choice>
            </attribute>
            <zeroOrMore>
                <choice>
                    <ref name="bridgehead"/>
                    <ref name="poem.author"/>
                </choice>
            </zeroOrMore>
            <oneOrMore>
                <ref name="poem.linegroup"/>
            </oneOrMore>
            <zeroOrMore>
                <choice>
                    <ref name="pagebreak.block" />
                    <ref name="poem.linegroup"/>
                    <ref name="bridgehead"/>
                    <ref name="poem.author"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="poem.author">
        <element name="p">
            <attribute name="class">
                <value>verse-author</value>
            </attribute>
            <ref name="Text"/>
        </element>
    </define>


    <define name="poem.linegroup">
        <element name="p">
            <attribute name="class">
                <value>linegroup</value>
            </attribute>
            <ref name="poem.line"/>
            <zeroOrMore>
                <choice>
                    <ref name="poem.line.without.pagebreak" />
                    <ref name="poem.line.with.pagebreak" />
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="poem.line.without.pagebreak">
        <ref name="br" />
        <ref name="poem.line"/>
    </define>

    <define name="poem.line.with.pagebreak">
        <ref name="br" />
        <ref name="pagebreak.inline" />
        <ref name="poem.line"/>
    </define>


    <define name="poem.line">
        <element name="span">
            <attribute name="class">
                <list>
                    <oneOrMore>
                        <choice>
                            <value>line</value>
                            <value>line_indent</value>
                            <value>line_longindent</value>
                        </choice>
                    </oneOrMore>
                </list>
            </attribute>
            <zeroOrMore>
                <ref name="poem.linenum"/>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
            <zeroOrMore>
                <ref name="poem.linenum"/>
            </zeroOrMore>
        </element>
    </define>

    <define name="poem.linenum">
        <element name="span">
            <attribute name="class">
                <value>linenum</value>
            </attribute>
            <ref name="Text"/>
        </element>
    </define>

    <a:documentation>The Anchor Element</a:documentation>
    
    <define name="a">
        <!--
        Use: a contains an anchor, which is used to reference another
        location, within the same or another <html>.
      -->
        <a:documentation>  Use: a contains an anchor, which is used to reference another location, within the same </a:documentation>
        <a:documentation>  or another html.</a:documentation>
        <element name="a">
            <!-- HTML content model: Transparent (same content model as parent), but descendants must not be "interactive", which for us means one of (a | audio | button | details | embed | iframe | input | keygen | label | object | select | textarea | video) -->
            <!-- Strict content model: (em | strong | dfn | code | samp | kbd | abbr | img | br | q | sub | sup | span | bdo | (text))* -->
            <ref name="attlist.a"/> <!-- @type, @href, @hreflang, @rel, @accesskey, @tabindex, @target, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inlinenoa"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.a" combine="interleave">
        <!--
        Attuse: a
        
        "href" value may have three forms:
        
        1) '#idref', in the <html>, to the element type having the
            referenced id value;
        
        2) 'uri', a uniform resource identifier to a resource, typically a
            document, see [RFC2396], possibly restricted to work with only
            the <html> document content, as referenced content is
            expected to be available on the same media, and off-media
            references may not be available;
        
        3) 'uri#xxx', in the resource uri, the element with id='xxx'.
        
        Uses of the remaining attributes other than %attrs; are:
        
            "hreflang" is the language code of the href target, see [RFC4646];
        
            "rel" is a list of forward link type(s), the relationship(s)
                expressed by the href value to the target, space-separated
                if multiple;
        
            "accesskey"=accessibility key character shortcut;
        
            "tabindex"=tabbing order.
      -->
        <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <optional>
            <attribute name="epub:type" />
        </optional>
        <optional>
            <attribute name="type">
                <ref name="ContentType"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="href">
                <ref name="URI"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="hreflang">
                <ref name="LanguageCode"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="rel">
                <ref name="LinkTypes"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="accesskey">
                <ref name="Character"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="tabindex">
                <ref name="Number"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="target">
                <value>_blank</value>
            </attribute>
        </optional>
    </define>
    
    <a:documentation>Inline Elements</a:documentation>
    
    <define name="em">
        <!--
        Use: em indicates emphasis. Usually <em> is rendered in italics.
        Compare with <strong>.
      -->
        <a:documentation> Use: em indicates emphasis. Usually em is rendered in italics.Compare with strong.</a:documentation>
        <element name="em">
            <ref name="attlist.em"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.em" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="strong">
        <!--
        Use: strong marks stronger emphasis than <em>. Visually <strong> is
        usually rendered bold.
      -->
        <a:documentation> Use: strong marks stronger emphasis than em. Visually strong is usually rendered bold.</a:documentation>
        <element name="strong">
            <ref name="attlist.strong"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.strong" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="dfn">
        <!--
        Use: dfn marks the first occurrence of a word or term that is
        defined or explained there or elsewhere in <book>. Often
        <dfn> is rendered in italics, sometimes in parentheses.
      -->
        <a:documentation>  Use: dfn marks the first occurrence of a word or term that is</a:documentation>
        <a:documentation>  defined or explained there or elsewhere in book. Often</a:documentation>
        <a:documentation> dfn is rendered in italics, sometimes in parentheses.</a:documentation>
        <element name="dfn">
            <ref name="attlist.dfn"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inlinenodfn"/> <!-- em, strong, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                <!-- STRICT NOTE: HTML5 disallows dfn descendants -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.dfn" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="kbd">
        <!--
        Use: kbd designates information that the reader is to input
        directly into a computer using the keyboard.
      -->
        <a:documentation>Use: kbd designates information that the reader is to input</a:documentation>
        <a:documentation>  directly into a computer using the keyboard.</a:documentation>
        <element name="kbd">
            <ref name="attlist.kbd"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.kbd" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="code">
        <!-- Use: code designates a fragment of computer code. -->
        <a:documentation>Use: code designates a fragment of computer code.</a:documentation>
        <element name="code">
            <ref name="attlist.code"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.code" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="pre">
        <element name="pre">
            <ref name="attlist.pre"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.pre" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="samp">
        <!--
        Use: samp contains a sample of work created by the author for
        use as an example or template. For example, a sample business
        letter, resume, computer program output, or form.
      -->
        <a:documentation>   Use: samp contains a sample of work created by the author for.</a:documentation>
        <a:documentation>   use as an example or template. For example, a sample business</a:documentation>
        <a:documentation>  letter, resume, computer program output, or form.</a:documentation>
        <element name="samp">
            <ref name="attlist.samp"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.samp" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <!-- Use: cite marks a reference (or citation) to another document. -->
    <define name="cite">
        <a:documentation>Use: cite marks a reference (or citation) to another document.</a:documentation>
        <element name="span">
            <ref name="attlist.cite"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
            <zeroOrMore>
                <choice>
                    <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                    <ref name="inlinetitle"/> <!-- span -->
                    <ref name="author.inline"/> <!-- span -->
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.cite" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>z3998:nonresolving-citation</value>
                <ref name="types"/>
            </list>
        </attribute>
        <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="abbr">
        <!--
        Use: abbr designates an abbreviation, a shortened form of a
        word. For examples: Mr., approx., lbs., rec'd.
        Contrast with <acronym>.
      -->
        <a:documentation>Use: abbr designates an abbreviation, a shortened form of a word.</a:documentation>
        <a:documentation>For examples: Mr., approx., lbs., rec'd. Contrast with acronym.</a:documentation>
        <element name="abbr">
            <ref name="attlist.abbr"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.abbr" combine="interleave">
        <!--
        Attuse: abbr
        
        "title" value may expand that abbreviation.
      -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="acronym">
        <!--
        Use: acronym marks a word formed from key letters (usually
        initials) of a group of words. For examples: UNESCO, NATO, XML, US.
        Contrast with <abbr>.
      -->
        <a:documentation> Use: acronym marks a word formed from key letters (usually</a:documentation>
        <a:documentation> initials) of a group of words. For examples: UNESCO, NATO, XML, US.</a:documentation>
        <a:documentation>  Contrast with abbr.</a:documentation>
        <element name="abbr">
            <ref name="attlist.acronym"/> <!-- @class, @style, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.acronym" combine="interleave">
        <!--
        Attuse: acronym
        
        "title" value may expand that acronym.
        "style" value '-epub-speak-as: spell-out;' indicates that the
        acronym is best presented as a sequence of letters (for examples, "XML" or  "US").
        Otherwise it may be pronounced as a word (for example, NATO).
      -->
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>acronym</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
        <optional>
            <attribute name="style">
                <value>-epub-speak-as: spell-out;</value>
            </attribute>
        </optional>
    </define>
    
    <define name="sub">
        <!--
        Use: sub indicates a subscript character (printed below a
        character's normal baseline). Can be used recursively and/or
        intermixed with <sup>.
      -->
        <a:documentation> Use: sub indicates a subscript character (printed below a</a:documentation>
        <a:documentation> character's normal baseline). Can be used recursively and/or</a:documentation>
        <a:documentation> intermixed with sup.</a:documentation>
        <element name="sub">
            <ref name="attlist.sub"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.sub" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="sup">
        <!--
        Use: sup marks a superscript character (printed above a
        character's normal baseline). Can be used recursively and/or
        intermixed with <sub>.
      -->
        <a:documentation>  Use: sup marks a superscript character (printed above a</a:documentation>
        <a:documentation>  character's normal baseline). Can be used recursively and or</a:documentation>
        <a:documentation>intermixed with sub.</a:documentation>
        <element name="sup">
            <ref name="attlist.sup"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.sup" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="span">
        <!--
        Use: span is a generic container for use in inline settings
        when no specific tag exists for a given situation. The class
        attribute may describe the nature of the text it marks (e.g.,
        a typographical error). May be used to mark a class of items
        to which styles are to be applied. Compare with <div>, which
        is used in a block settings.
      -->
        <a:documentation>  Use: span is a generic container for use in inline settings</a:documentation>
        <a:documentation>  when no specific tag exists for a given situation. The class</a:documentation>
        <a:documentation>  attribute may describe the nature of the text it marks (e.g.,</a:documentation>
        <a:documentation> a typographical error). May be used to mark a class of items</a:documentation>
        <a:documentation>  to which styles are to be applied. Compare with div, which</a:documentation>
        <a:documentation> is used in a block settings.</a:documentation>
        <element name="span">
            <ref name="attlist.span"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.span" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="bdo">
        <!--
        Use: bdo is used in special cases where the automatic actions
        of the bi-directional algorithm would result in incorrect display.
      -->
        <a:documentation>   Use: bdo is used in special cases where the automatic actions</a:documentation>
        <a:documentation> of the bi-directional algorithm would result in incorrect display.</a:documentation>
        <element name="bdo">
            <ref name="attlist.bdo"/> <!-- @id, @title, @xml:space, @epub:type, @class, @xml:lang, @lang, @dir -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.bdo" combine="interleave">
        <ref name="coreattrs"/> <!-- @id, @title, @xml:space, @epub:type, @class -->
        <ref name="i18n"/> <!-- @xml:lang, @lang, @dir -->
    </define>
    
    <a:documentation>Inline Sentence and Word</a:documentation>
    
    <define name="sent">
        <!-- Use: marks a sentence. -->
        <a:documentation>   Use: marks a sentence.</a:documentation>
        <element name="span">
            <ref name="attlist.sent"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
            <zeroOrMore>
                <ref name="inlines"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, aside -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.sent" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>z3998:sentence</value>
                <ref name="types"/>
            </list>
        </attribute>
        <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="w">
        <!-- Use: marks a word. -->
        <a:documentation>   Use: marks a word.</a:documentation>
        <element name="span">
            <ref name="attlist.w"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
            <zeroOrMore>
                <ref name="inlinew"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.w" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>z3998:word</value>
                <ref name="types"/>
            </list>
        </attribute>
        <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <a:documentation>Page Number, Footnote and Annotation Reference</a:documentation>
    
    <define name="pagebreak.block">
        <!--
        Use: pagebreak contains one page number as it appears from the print
        document, usually inserted at the point within the file immediately
        preceding the first item of content on a new page.
      -->
        <a:documentation> Use: pagebreak contains one page number as it appears from the print</a:documentation>
        <a:documentation> document, usually inserted at the point within the file immediately</a:documentation>
        <a:documentation>   preceding the first item of content on a new page.</a:documentation>
        <a:documentation>   The title attribute must be used to describe the page number.</a:documentation>
        <element name="div">
            <ref name="attlist.pagebreak"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <optional>
                <ref name="Text"/>
            </optional>
        </element>
    </define>

    <define name="pagebreak.inline">
        <element name="span">
            <ref name="attlist.pagebreak"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <optional>
                <ref name="Text"/>
            </optional>
        </element>
    </define>

    <define name="attlist.pagebreak" combine="interleave">
        <!--
        Attuse: pagebreak
        
        three kinds of page numbering schemes are allowed using the class attribute:
        "page-front" (for roman-numeral pages at the start of a book), 
        "page-normal" (for pages identified by arabic numerals),
        or "page-special" (for all other kinds of pages)
      -->
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>pagebreak</value>
                <ref name="types"/>
            </list>
        </attribute>
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <choice>
                    <value>page-front</value>
                    <value>page-normal</value>
                    <value>page-special</value>
                </choice>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrsrqd.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
        <!-- The title attribute must be used to describe the page number. -->
    </define>
    
    <define name="noteref">
        <!--
        Use: noteref marks one or more characters that reference a footnote
        or endnote.
      -->
        <a:documentation> Use: noteref marks one or more characters that reference a footnote or endnote.</a:documentation>
        <element name="a">
            <ref name="attlist.noteref"/> <!-- @epub:type, @class, @href, @type, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <text/>
        </element>
    </define>

    <define name="attlist.noteref" combine="interleave">
        <!--
        Attuse: noteref
        
        "href" is a URI pointing to the target note, either within
        same document or in another document.  For example:
        <a href='#yyy'> refers to note with id "yyy" within same document.
        <a href='foobar.xhtml#xxx'> refers to note with id "xxx" in document foobar.xhtml
        
        "type" provides advisory content MIME type of
        the target, see [RFC2046].
      -->
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>noteref</value>
                <ref name="types"/>
            </list>
        </attribute>
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>noteref</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
        <attribute name="href">
            <a:documentation> "href" is a URI pointing to the target note, either within same document or in another document. </a:documentation>
            <ref name="URI"/>
        </attribute>
        <optional>
            <attribute name="type">
                <a:documentation> "type" provides advisory content MIME type of the target, see [RFC2046]. </a:documentation>
                <ref name="ContentType"/>
            </attribute>
        </optional>
    </define>
    
    <define name="annoref">
        <!--
        Use: annoref marks a text segment that references an <annotation>.
        Each <annoref> is usually a word, phrase, or whole line that
        is part of the surrounding text (identified in the original
        print book by bolding, italics, etc.). It should not normally
        be allowed to be turned off in a DTB application.
      -->
        <a:documentation> Use: annoref marks a text segment that references an annotation.</a:documentation>
        <element name="a">
            <ref name="attlist.annoref"/> <!-- @epub:type, @class, @href, @type, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <text/>
        </element>
    </define>

    <define name="attlist.annoref" combine="interleave">
        <!--
        Attuse: annoref
        
        "href" is a URI pointing to the target annotation, either within
        same document or in another document.  For example:
        <a href='#yyy'> refers to the annotation with id "yyy" within same document.
        <a href='foobar.xhtml#xxx'> refers to the annotation with id "xxx" in document foobar.xhtml
        
        "type" provides advisory content MIME
        type of the targeted id, see [RFC2046].
      -->
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>annoref</value>
                <ref name="types"/>
            </list>
        </attribute>
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>annoref</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
        <attribute name="href">
            <a:documentation> "href" is a URI pointing to the target annotation, either within same document or in another document. </a:documentation>
            <ref name="URI"/>
        </attribute>
        <optional>
            <attribute name="type">
                <a:documentation> "type" provides advisory content MIME type of the target, see [RFC2046]. </a:documentation>
                <ref name="ContentType"/>
            </attribute>
        </optional>
    </define>
    
    <a:documentation>Inline Quotes</a:documentation>
    
    <define name="q">
        <!--
        Use: q contains a short, inline quotation. Compare with
        <blockquote>, which marks a longer quotation set off from the
        surrounding text.
      -->
        <a:documentation> Use: q contains a short, inline quotation. Compare with</a:documentation>
        <a:documentation>  blockquote, which marks a longer quotation set off from the surrounding text. </a:documentation>
        <element name="q">
            <ref name="attlist.q"/> <!-- @cite, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.q" combine="interleave">
        <!--
        Attuse: q
        
        "cite" may provide a URI reference.
      -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <optional>
            <attribute name="cite">
                <a:documentation> "cite" may provide a URI reference.</a:documentation>
                <ref name="URI"/>
            </attribute>
        </optional>
    </define>
    
    <a:documentation>Images</a:documentation>
    
    <define name="Length">
        <a:documentation>measured in pixels, percent (nn%)</a:documentation>
        <data type="string" datatypeLibrary=""/>
        <!-- measured in pixels, percent (nn%) -->
    </define>
    
    <define name="img">
        <a:documentation> Use: img marks a visual image. An img will always contain an alt a pointer to a related aside epub:type="z3998:production"(prodnote).</a:documentation>
        <element name="img">
            <ref name="attlist.img"/> <!-- @src, @alt, @height, @width, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <empty/>
        </element>
    </define>

    <define name="attlist.img" combine="interleave">
        <!--
        Attuse: img
        
        "src" specifies by URI the location of the image file.
        
        "alt" is used to supply a short description of the <img>.
        
        <aside epub:type="z3998:production"> (prodnote) that contains a detailed description of the <img>.
        
        The attributes "height" and "width" provide visual sizing
        information, measured in pixels.
      -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <attribute name="src">
            <a:documentation> "src" specifies by URI the location of the image file.</a:documentation>
            <ref name="URI"/>
        </attribute>
        <attribute name="alt">
            <a:documentation> "alt" is used to supply a short description of the img.</a:documentation>
            <ref name="Text"/>
        </attribute>
        <optional>
            <attribute name="height">
                <ref name="Length"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="width">
                <ref name="Length"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="aria-details">
                <a:documentation>Should point to the details element that directly follows the image figure element</a:documentation>
                <ref name="Text"/>
            </attribute>
        </optional>
    </define>

    <define name="figure.imggroup">
        <choice>
            <ref name="figure.table"/>
            <ref name="figure.image"/>
            <ref name="figure.image-series"/>
        </choice>
    </define>

    <define name="figure.table">
        <a:documentation>An image. The figure provides a container for the associated figcaption.</a:documentation>
        <element name="figure">
            <ref name="attlist.figure.table"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @aria-describedby -->
            <zeroOrMore>
                <choice>
                    <ref name="table-desc"/> <!-- aside -->
                    <ref name="prodnote"/> <!-- aside -->
                </choice>
            </zeroOrMore>
            <ref name="table"/> <!-- table -->
            <zeroOrMore>
                <choice>
                    <ref name="table-desc"/> <!-- aside -->
                    <ref name="prodnote"/> <!-- aside -->
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="figure.image">
        <a:documentation>An image. The figure provides a container for the associated figcaption.</a:documentation>
        <element name="figure">
            <ref name="attlist.figure.image"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @aria-describedby -->
            <optional>
                <ref name="caption.figure"/> <!-- figcaption -->
            </optional>
            <ref name="img"/> <!-- img -->
            <zeroOrMore>
                <choice>
                    <ref name="fig-desc"/> <!-- aside -->
                    <ref name="prodnote"/> <!-- aside -->
                </choice>
            </zeroOrMore>
        </element>
        <optional>
            <element name="details">
                <ref name="attrsrqd"/>  <!-- attrsrqd instead of attrs because all details elements should have id attributes -->
                <element name="summary">
                    <ref name="attrs"/>
                    <ref name="inline"/>
                </element>
                <ref name="flow"/>
            </element>
        </optional>
    </define>

    <define name="figure.image-series">
        <a:documentation>An image series. The figure provides a container for multiple images and a figcaption(s) associated with the series itself.</a:documentation>
        <element name="figure">
            <!-- In HTML there can be at most one figcaption per figure, and it must be either the first or last child of the figure.
                 As a result, we wrap each (img caption*)-group in nested figure elements. -->
            <ref name="attlist.figure.image-series"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
            <optional>
                <ref name="caption.figure"/> <!-- figcaption -->
            </optional>
            <oneOrMore>
                <zeroOrMore>
                    <choice>
                        <ref name="pagebreak.block"/> <!-- div -->
                        <ref name="prodnote"/> <!-- aside -->
                    </choice>
                </zeroOrMore>
                <ref name="figure.image"/>
            </oneOrMore>
        </element>
    </define>

    <define name="fig-desc">
        <element name="aside">
            <ref name="attlist.fig-desc"/>
            <ref name="flow"/>
        </element>
    </define>

    <define name="attlist.fig-desc" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>fig-desc</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrsrqd.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>

    <define name="table-desc">
        <element name="aside">
            <ref name="attlist.table-desc"/>
            <ref name="flow"/>
        </element>
    </define>

    <define name="attlist.table-desc" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>table-desc</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrsrqd.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>

    <define name="attlist.figure.image-series" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>image-series</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>

    <define name="attlist.figure.image" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>image</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>

    <define name="attlist.figure.table" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>table</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>

    <define name="caption.figure">
        <element name="figcaption">
            <!-- STRICT NOTE: In DTBook, captions and images can appear in any order. In HTML5, the figcaption has to occur at the beginning or end of an imggroup. When transforming a DTBook with multiple captions in the same imggroup to HTML5, each caption will be wrapped in separate div elements inside the figcaption. If some images have captions and some don’t, then the empty captions should be represented as empty <div class=”caption”/> elements. This allows for proper conversion back to DTBook, as well as the ability to visually associate the captions and images using CSS. -->
            <choice>
                <group>
                    <ref name="attlist.figcaption"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
                    <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
                </group>
                <group>
                    <oneOrMore>
                        <element name="div">
                            <ref name="attlist.figcaption"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
                            <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
                        </element>
                    </oneOrMore>
                </group>
            </choice>
        </element>
    </define>

    <define name="attlist.figcaption" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="hr">
        <element name="hr">
            <ref name="attlist.hr"/> <!-- @class -->
        </element>
    </define>

    <define name="attlist.hr" combine="interleave">
        <attribute name="class">
            <choice>
                <value>emptyline</value>
                <value>separator</value>
            </choice>
        </attribute>
    </define>
    
    <a:documentation>Paragraphs</a:documentation>
    
    <define name="p">
        <!-- Use: p contains a paragraph, which may contain subsidiary lists -->
        <a:documentation> Use: p contains a paragraph. In HTML, lists are not allowed inside paragraphs. </a:documentation>
        <optional>
            <ref name="hr"/> <!-- hr -->
        </optional>
        <element name="p">
            <ref name="attlist.p"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
        <optional>
            <ref name="hr"/> <!-- hr -->
        </optional>
        <!-- STRICT NOTE: In HTML, lists are not allowed inside paragraphs. -->
        <zeroOrMore>
            <choice>
                <ref name="list"/> <!-- ol, ul -->
                <ref name="dl"/> <!-- dl -->
            </choice>
        </zeroOrMore>
    </define>

    <define name="attlist.p" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <a:documentation>Doctitle, Docauthor, Covertitle, and Headings </a:documentation>
    
    <define name="doctitle">
        <!--
        Use: doctitle marks the full title of the book, including any subtitles.
      -->
        <a:documentation> Use: doctitle marks the full title of the book, including any subtitles. </a:documentation>
        <element name="p">
            <ref name="attlist.doctitle"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="doctitle.headline">
        <element name="h1">
            <ref name="attlist.doctitle"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.doctitle" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>fulltitle</value>
                <ref name="types"/>
            </list>
        </attribute>
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>title</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
    </define>
    
    <define name="docauthor">
        <!--
        Use: docauthor marks each author or editor of this work.
      -->
        <a:documentation> Use: docauthor marks each author or editor of this work. </a:documentation>
        <element name="p">
            <ref name="attlist.docauthor"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.docauthor" combine="interleave">
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>docauthor</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @epub:type, @title, @xml:space, @xml:lang, @lang, @dir -->
    </define>
    
    <define name="covertitle">
        <!--
        Use: covertitle is the short title of a book, often found on the
        spine. It may be the same as the doctitle.
      -->
        <a:documentation> Use: covertitle is the short title of a book, often found on the </a:documentation>
        <a:documentation>   spine. It may be the same as the doctitle. </a:documentation>
        <element name="p">
            <ref name="attlist.covertitle"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
            <text/>
        </element>
    </define>

    <define name="attlist.covertitle" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>covertitle</value>
                <ref name="types"/>
            </list>
        </attribute>
        <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="h1">
        <element name="h1">
            <ref name="attlist.h1"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.h1" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="h2">
        <element name="h2">
            <ref name="attlist.h2"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.h2" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="h3">
        <element name="h3">
            <ref name="attlist.h3"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.h3" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="h4">
        <element name="h4">
            <ref name="attlist.h4"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.h4" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="h5">
        <element name="h5">
            <ref name="attlist.h5"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.h5" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="h6">
        <element name="h6">
            <ref name="attlist.h6"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.h6" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="bridgehead">
        <!--
        Use: bridgehead is a free-floating heading that is not associated with the
        hierarchical structure of a document. It may occur only subsidiary to one
        of the hierarchic elements. <h1> ... <h6> are
        restricted to one occurrence per level. bridgehead has no such restriction, but should be used
        only when it is clear that none of the structural headings is appropriate.
      -->
        <a:documentation>  Use: bridgehead is a free-floating heading that is not associated with the </a:documentation>
        <a:documentation>    hierarchical structure of a document. </a:documentation>
        <element name="p">
            <ref name="attlist.bridgehead"/> <!-- @epub:type, @class, @id, @title, @xml:space, @xml:lang, @lang, @dir -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.bridgehead" combine="interleave">
        <attribute name="epub:type">
            <list>
                <ref name="types"/>
                <value>bridgehead</value>
                <ref name="types"/>
            </list>
        </attribute>
        <attribute name="class">
            <list>
                <ref name="classes"/>
                <value>bridgehead</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.base"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir -->
    </define>
    
    <define name="hd">
        <!--
        Use: h1-h6 marks the text of a heading in <body>, <section>, etc.
      -->
        <a:documentation>  Use: h1-h6 marks the text of a heading in body, section, etc. </a:documentation>
        <choice>
            <element name="h1">
                <ref name="attlist.hd"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
                <zeroOrMore>
                    <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                </zeroOrMore>
            </element>
            <element name="h2">
                <ref name="attlist.hd"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
                <zeroOrMore>
                    <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                </zeroOrMore>
            </element>
            <element name="h3">
                <ref name="attlist.hd"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
                <zeroOrMore>
                    <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                </zeroOrMore>
            </element>
            <element name="h4">
                <ref name="attlist.hd"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
                <zeroOrMore>
                    <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                </zeroOrMore>
            </element>
            <element name="h5">
                <ref name="attlist.hd"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
                <zeroOrMore>
                    <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                </zeroOrMore>
            </element>
            <element name="h6">
                <ref name="attlist.hd"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
                <zeroOrMore>
                    <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
                </zeroOrMore>
            </element>
        </choice>
    </define>

    <define name="attlist.hd" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <a:documentation>Block-like Quotes</a:documentation>
    
    <define name="blockquote">
        <!--
        Use: blockquote indicates a block of quoted content that is set
        off from the surrounding text by paragraph breaks. Compare with
        <q>, which marks short, inline quotations.
      -->
        <a:documentation> Use: blockquote indicates a block of quoted content that is set </a:documentation>
        <a:documentation>  off from the surrounding text by paragraph breaks. Compare with</a:documentation>
        <a:documentation>  q, which marks short, inline quotations.</a:documentation>
        <element name="blockquote">
            <ref name="attlist.blockquote"/> <!-- @cite, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <choice>
                    <ref name="pagebreak.block"/> <!-- div -->
                    <ref name="block"/> <!-- p, hr, ol, ul, dl, pre, div, blockquote, img, figure, section, span, table, address, aside, math -->
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.blockquote" combine="interleave">
        <!--
        Attuse: blockquote
        
        "cite" permits inclusion of the
        URI from which the blockquote came.
      -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <optional>
            <attribute name="cite">
                <a:documentation> "cite" permits inclusion of the URI from which the blockquote came. </a:documentation>
                <ref name="URI"/>
            </attribute>
        </optional>
    </define>
    
    <a:documentation>Definition List, and Other Lists</a:documentation>
    
    <define name="dl">
        <!--
        Use: dl contains a definition list, usually consisting of pairs of
        terms <dt> and definitions <dd>. Any definition can contain another
        definition list.
      -->
        <a:documentation>  Use: dl contains a definition list, usually consisting of pairs of terms dt and definitions dd.</a:documentation>
        <a:documentation>  Any definition can contain another definition list.</a:documentation>
        <!--
            STRICT NOTE: spans (pagebreak equivalent in HTML) are not allowed as direct children of dl.
            They are allowed as children of dt and dd however. The pagebreaks should be moved to its
            closest preceding dt or dd element as its last child (or as the first preceding sibling
            of the dl element itself if it is the first child) when converting from DTBook to HTML,
            and vice versa.
        -->
        <element name="dl">
            <ref name="attlist.dl"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <oneOrMore>
                <choice>
                    <ref name="dt"/> <!-- dt -->
                    <ref name="dd"/> <!-- dd -->
                </choice>
            </oneOrMore>
        </element>
    </define>

    <define name="attlist.dl" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="dt">
        <!--
        Use: dt marks a term in a definition list <dl> for which a
        definition <dd> follows.
      -->
        <a:documentation>  Use: dt marks a term in a definition list dl for which a definition dd follows.</a:documentation>
        <element name="dt">
            <ref name="attlist.dt"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
            <optional>
                <ref name="pagebreak.inline"/> <!-- span -->
            </optional>
        </element>
    </define>

    <define name="attlist.dt" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="dd">
        <!--
        Use: dd marks a definition of the preceding term <dt> within a
        definition list <dl>. A definition without a preceding <dt> has
        no semantic interpretation, but is visually presented aligned
        with other <dd>.
      -->
        <a:documentation> Use: dd marks a definition of the preceding term dt within a definition list dl.</a:documentation>
        <a:documentation>  A definition without a preceding dt has no semantic interpretation,</a:documentation>
        <a:documentation>  but is visually presented aligned with other dd.</a:documentation>
        <element name="dd">
            <ref name="attlist.dd"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <ref name="flow"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
            <optional>
                <ref name="pagebreak.inline"/> <!-- span -->
            </optional>
        </element>
    </define>

    <define name="attlist.dd" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="list">
        <!--
            Use: lists contains some form of list, ordered, unordered, or preformatted.
            If bullets and outline enumerations are part of
            the preformatted print content, they are expected to prefix those list
            items in content, rather than be implicitly generated.
        -->
        <a:documentation> Use: lists contains some form of list, ordered, unordered, or preformatted.</a:documentation>
        <a:documentation>    If bullets and outline enumerations are part of the preformatted print content,</a:documentation>
        <a:documentation> they are expected to prefix those list items in content, rather than be implicitly generated.</a:documentation>
        <!-- STRICT NOTE: only 'li' elements are allowed as children of the list elements 'ol' and 'ul'. pagebreaks, prodnotes and headlines must be wrapped in li's -->
        <choice>
            <element name="ol">
                <choice>
                    <ref name="attlist.list.ordered"/> <!-- @type, @start, @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
                    <ref name="attlist.list.preformatted"/> <!-- @style, @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
                </choice>
                <oneOrMore>
                    <!-- STRICT NOTE: p -->
                    <ref name="li"/> <!-- li -->
                </oneOrMore>
            </element>
            <element name="ul">
                <ref name="attlist.list.unordered"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
                <oneOrMore>
                    <!-- STRICT NOTE: pagebreaks, prodnotes and headlines only allowed inside li -->
                    <ref name="li"/> <!-- li -->
                </oneOrMore>
            </element>
        </choice>
    </define>

    <define name="attlist.list.ordered" combine="interleave">
        <!--
        Attuse: list
        
        "type" indicates the kind of enumeration:
            '1'=integer,
            'a'=lowercase,
            'A'=uppercase,
            'i'=lowercase Roman, or
            'I'=uppercase Roman.
        
        "start" value indicates the ordered list integer ordinal, impllcitly 1,
        to denote the first ordered list item. Its value is determined for the
        indicated enum type. A start value is useful when there is an injection
        of a different element type, such as <pageno>.
      -->
        <ref name="attlist.list.common"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <!-- ordered list -->
        <optional>
            <attribute name="type">
                <a:documentation> "type" indicates the kind of enumeration:'1'=integer,'a'=lowercase,'A'=uppercase,</a:documentation>
                <a:documentation>  'i'=lowercase Roman, or 'I'=uppercase Roman.</a:documentation>
                <a:documentation> they are expected to prefix those list items in content, rather than be implicitly generated.</a:documentation>
                <choice>
                    <value>1</value>
                    <value>a</value>
                    <value>A</value>
                    <value>i</value>
                    <value>I</value>
                </choice>
            </attribute>
        </optional>
        <optional>
            <attribute name="start"/>
            <a:documentation>  "start" value indicates the ordered list integer ordinal, implicitly 1,</a:documentation>
            <a:documentation> to denote the first ordered list item. Its value is determined for the indicated enum type.</a:documentation>
        </optional>
        <!-- depth is implicit (count number of ancestor list elements + 1) -->
    </define>
    
    <define name="attlist.list.preformatted" combine="interleave">
        <ref name="attlist.list.common"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <attribute name="style">
            <value>list-style-type: none;</value>
        </attribute>
        <!-- depth is implicit (count number of ancestor list elements + 1) -->
    </define>
    
    <define name="attlist.list.unordered" combine="interleave">
        <ref name="attlist.list.common"/> <!-- @epub:type, @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
        <!-- depth is implicit (count number of ancestor list elements + 1) -->
    </define>
    
    <define name="attlist.list.common">
        <optional>
            <attribute name="epub:type">
                <list>
                    <ref name="types"/>
                    <optional>
                        <value>endnotes</value>
                    </optional>
                    <ref name="types"/>
                </list>
            </attribute>
        </optional>
        <ref name="attrs.notype"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @class -->
    </define>
    
    <define name="li">
        <!--
        Use: li marks each list item in a list. <li> content may be
        either inline or block and may include other nested
        lists. Alternatively it may contain a sequence of list item
        components, lic, that identify regularly occurring content,
        such as the heading and page number of each entry in a
        table of contents.
      -->
        <a:documentation>  Use: li marks each list item in a list. li content may be either inline or block and</a:documentation>
        <a:documentation>  and may include other nested lists. Alternatively it may contain a sequence of list item</a:documentation>
        <a:documentation>  components, lic, that identify regularly occurring content,</a:documentation>
        <a:documentation>  such as the heading and page number of each entry in a table of contents.</a:documentation>
        <element name="li">
            <ref name="attlist.li"/> <!-- @value, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <ref name="flowlic"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, ol, ul, p, hr, dl, pre, div, blockquote, section, table, address, aside, figure -->
        </element>
    </define>

    <define name="attlist.li" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <optional>
            <attribute name="value">
                <data type="integer"/>
            </attribute>
        </optional>
    </define>
    
    <define name="lic">
        <!--
        Use: lic ("list item component") allows ordered substructure
        within a list item <li>. Used when a list item is made up of
        two or more components, as in a table of contents entry.
        The same number of lic should occur in each <li>. If not,
        correspondence of lic in different <li> is in order of
        occurrence for the current writing direction of the <li>.
      -->
        <a:documentation>   Use: lic ("list item component") allows ordered substructure</a:documentation>
        <a:documentation>  within a list item li. Used when a list item is made up of</a:documentation>
        <a:documentation>    two or more components, as in a table of contents entry.</a:documentation>
        <element name="span">
            <ref name="attlist.lic"/> <!-- @class, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
            <zeroOrMore>
                <ref name="inline"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.lic" combine="interleave">
        <!--
        Attuse: lic
        
        class attribute may be used to identify the particular
        component of a list item <li>. For example, in a table of contents
        class values might include "section", and "pagebreakber".
      -->
        <attribute name="class">
            <a:documentation>   class attribute may be used to identify the particular</a:documentation>
            <a:documentation>  component of a list item li. </a:documentation>
            <a:documentation>   For example, in a table of contents class values might include "section", and "pagebreak".</a:documentation>
            <list>
                <ref name="classes"/>
                <value>lic</value>
                <ref name="classes"/>
            </list>
        </attribute>
        <ref name="attrs.noclass"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type -->
    </define>
    
    <a:documentation>Tables</a:documentation>
    
    <define name="Scope">
        <a:documentation>    Scope specifies a set of data cells for which the th provides header information.</a:documentation>
        <choice>
            <value>row</value>
            <value>col</value>
            <value>rowgroup</value>
            <value>colgroup</value>
        </choice>
    </define>
    
    <define name="cellhvalign">
        <!--
        Scope specifies a set of data cells for which the <th> provides
        header information.
      -->
        <a:documentation>  values supported in HTML5 are left, center, right and justify </a:documentation>
        <!-- values supported in HTML5 are left, center, right and justify -->
        <optional>
            <attribute name="style">
                <data type="string">
                    <param name="pattern">^vertical-align: (top|middle|bottom|baseline); (text-align: (left|center|right|justify);|text-align: right; padding-right: \d+ch;)(| width: \w+;)$</param>
                    <!-- NOTE: text-align: "{char}" right; is not currently supported and may be removed from the CSS3 draft; using padding-right instead. -->
                </data>
            </attribute>
        </optional>
        <!-- the char attribute from the DTBook is used when calculating the CSS padding -->
        <!-- STRICT NOTE: the charoff attribute is removed when converting from dtbook to epub3 -->
        <!--
        % cellhalign
        cellhalign sets horizontal alignment of content in
        a table cell.
        
        char indicates a character expected in each table
        cell of a column that text should align on. The default is
        the decimal point for the current language.
        
        charoff sets the alignment offset of the first character
        to align on, as specified with char.
        
        Inheritance order for horizontal alignment is <th>|<td>,
        <tr>, <thead>|<tfoot>|<tbody>, <col>, <colgroup>, default. The
        default value is from the user agent, and may be affected
        by user preference. The recommended default alignment for
        <th> is center, and for <td> is left.
      -->
    </define>
    
    <define name="table">
        <!--
        Use: table contains cells of tabular data arranged in rows and
        columns. A <table> may have a caption. It may have descriptions of
        the columns in <col>s or groupings of several <col> in <colgroup>.
        A simple <table> may be made up of just rows <tr>. Note the logical order of
        optional <thead>, optional <tfoot>, then one or more of either
        <tbody> or just rows <tr>. This order accommodates simple or large,
        complex tables. The <thead> and <tfoot> information usually helps
        identify content of the <tbody> rows, For a multiple-page print
        <table> the <thead> and <tfoot> are repeated on each page, but
        not redundantly tagged.
      -->
        <a:documentation>  Use: table contains cells of tabular data arranged in rows and</a:documentation>
        <a:documentation>  columns. A table may have a caption. It may have descriptions of</a:documentation>
        <a:documentation>  the columns in cols or groupings of several col in colgroup.</a:documentation>
        <element name="table">
            <ref name="attlist.table"/> <!-- @style, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <optional>
                <ref name="caption.table"/> <!-- caption -->
            </optional>
            <a:documentation>STRICT NOTE: col elements are not allowed as direct children of the table element in HTML.</a:documentation>
            <a:documentation>Must be wrapped in colgroup elements.</a:documentation>
            <!-- STRICT NOTE: col elements are not allowed as direct children of the table element in HTML. Must be wrapped in colgroup elements. -->
            <zeroOrMore>
                <ref name="colgroup"/> <!-- colgroup -->
            </zeroOrMore>
            <optional>
                <ref name="thead"/> <!-- thead -->
            </optional>
            <optional>
                <ref name="tfoot"/> <!-- tfoot -->
            </optional>
            <!--<choice>-->
                <oneOrMore>
                    <ref name="tbody"/> <!-- tbody -->
                </oneOrMore>
            <a:documentation>STRICT NOTE: spans (HTML equivalent for pagebreaks) are not allowed as direct children of the table </a:documentation>
            <a:documentation> element in HTML. They must be moved to the following cell (th,td), or to outside of the table</a:documentation>
            <a:documentation> element.Must be wrapped in colgroup elements.</a:documentation>
                <!--<oneOrMore>
                    <ref name="tr"/> <!-\- tr -\->
                   
                    <!-\- STRICT NOTE: spans (HTML equivalent for pagebreaks) are not allowed as direct children of the table element in HTML. They must be moved to the following cell (th,td), or to outside of the table element. -\->
                </oneOrMore>
            </choice>-->
        </element>
    </define>

    <define name="attlist.table" combine="interleave">
        <!-- summary moved into table/caption/p[@class=~'table-summary'] -->
        <!--
            Most attributes are deprecated. Convert to CSS according to Mozilla:
            http://hg.mozilla.org/mozilla-central/file/3fd770ef6a65/layout/style/html.css
        -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <optional>
            <attribute name="style"/>
        </optional>
    </define>
    
    <define name="caption.table">
        <element name="caption">
            <ref name="attlist.caption"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
            <optional>
                <element name="p">
                    <!-- STRICT NOTE: Table summary attribute not allowed in HTML. Will be presented as a paragraph here instead. -->
                    <attribute name="class">
                        <list>
                            <ref name="classes"/>
                            <value>table-summary</value>
                            <ref name="classes"/>
                        </list>
                    </attribute>
                    <ref name="Text"/>
                </element>
            </optional>
            <ref name="flownotable"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, address, aside, figure -->
        </element>
    </define>
    
    <define name="attlist.caption" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
    </define>
    
    <define name="thead">
        <!--
        Use: thead marks header information in a <table>, consisting of
        one or more rows <tr> of <th> cells.
      -->
        <a:documentation>Use: thead marks header information in a table, consisting of</a:documentation>
        <a:documentation> one or more rows tr of th cells.</a:documentation>
        <element name="thead">
            <ref name="attlist.thead"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class, @style -->
            <oneOrMore>
                <ref name="tr"/> <!-- tr -->
            </oneOrMore>
        </element>
    </define>

    <define name="attlist.thead" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <ref name="cellhvalign"/> <!-- @style -->
    </define>
    
    <define name="tfoot">
        <!--
        Use: tfoot marks footer information in a <table>, consisting of
        one or more rows <tr>, usually of <th> cells.
      -->
        <a:documentation> Use: tfoot marks footer information in a table consisting of</a:documentation>
        <a:documentation> one or more rows tr, usually of th cells.</a:documentation>
        <element name="tfoot">
            <ref name="attlist.tfoot"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class, @style -->
            <oneOrMore>
                <ref name="tr"/> <!-- tr -->
            </oneOrMore>
        </element>
    </define>

    <define name="attlist.tfoot" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <ref name="cellhvalign"/> <!-- @style -->
    </define>
    
    <define name="tbody">
        <!--
        Use: tbody marks a group of rows in the main body of a <table>.
      -->
        <a:documentation> Use: tbody marks a group of rows in the main body of a table.</a:documentation>
        <a:documentation> STRICT NOTE: spans (HTML equivalent for pagebreaks) are not allowed as direct children of the tbody </a:documentation>
        <a:documentation> element in HTML. They must be moved to the preceding cell (th/td) or to before the table starts.</a:documentation>
        <element name="tbody">
            <ref name="attlist.tbody"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class, @style -->
            <oneOrMore>
                <ref name="tr"/> <!-- tr -->
                <!-- STRICT NOTE: spans (HTML equivalent for pagebreaks) are not allowed as direct children of the tbody element in HTML. They must be moved to the preceding cell (th/td) or to before the table starts. -->
            </oneOrMore>
        </element>
    </define>

    <define name="attlist.tbody" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <ref name="cellhvalign"/> <!-- @style -->
    </define>
    
    <define name="colgroup">
        <!--
        Use: colgroup groups adjacent columns <col> that are semantically
        related.
      -->
        <a:documentation>  Use: colgroup groups adjacent columns col that are semantically related.</a:documentation>
        <element name="colgroup">
            <ref name="attlist.colgroup"/> <!-- @span, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class, @style -->
            <zeroOrMore>
                <ref name="col"/> <!-- col -->
            </zeroOrMore>
        </element>
    </define>

    <define name="attlist.colgroup" combine="interleave">
        <!--
        Attuse: colgroup
        
        "span" causes the attributes of one
        col element to apply to more than one column, extending in the
        writing direction for the language. Span is ignored if
        any <col> are present.
      -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <optional>
            <a:documentation> "span" causes the attributes of one col element to apply to more than one column, </a:documentation>
            <a:documentation>extending in the writing direction for the language. </a:documentation>
            <a:documentation>Span is ignored if any col are present. </a:documentation>
            <attribute name="span" a:defaultValue="1">
                <data type="NMTOKEN"/>
            </attribute>
        </optional>
        <ref name="cellhvalign"/> <!-- @style -->
    </define>
    
    <define name="col">
        <!--
        Use: col elements define the alignment properties for cells in
        one or more columns.
      -->
        <a:documentation>Use: col elements define the alignment properties for cells in one or more columns. </a:documentation>
        <element name="col">
            <ref name="attlist.col"/> <!-- @span, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class, @style -->
            <empty/>
        </element>
    </define>

    <define name="attlist.col" combine="interleave">
        <!--
        Attuse: col
        "span" indicates how many columns the <col>
        extends, in the writing direction of the <table>. The
        attribute values apply to <th> and <td> that start in the
        column, even if they extend into the next column(s), by
        span value more than 1, and that next <col> may have different
        attribute values.
      -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <optional>
            <a:documentation> "span" indicates how many columns the col </a:documentation>
            <a:documentation>extends, in the writing direction of the table. </a:documentation>
            <attribute name="span" a:defaultValue="1">
                <data type="NMTOKEN"/>
            </attribute>
        </optional>
        <ref name="cellhvalign"/> <!-- @style -->
    </define>
    
    <!-- Use: tr marks one row of a <table> containing <th> or <td> cells. -->
    <define name="tr">
        <a:documentation>Use: tr marks one row of a table containing th or td cells. </a:documentation>
        <element name="tr">
            <ref name="attlist.tr"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class, @style -->
            <oneOrMore>
                <choice>
                    <ref name="th"/> <!-- th -->
                    <ref name="td"/> <!-- td -->
                </choice>
            </oneOrMore>
        </element>
    </define>

    <define name="attlist.tr" combine="interleave">
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <ref name="cellhvalign"/> <!-- @style -->
    </define>
    
    <!-- Use: th indicates a table cell containing header information. -->
    <define name="th">
        <a:documentation>Use: th indicates a table cell containing header information. </a:documentation>
        <element name="th">
            <ref name="attlist.th"/> <!-- @headers, @scope, @rowspan, @colspan, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class, @style -->
            <ref name="flowtd"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
        </element>
    </define>

    <define name="attlist.th" combine="interleave">
        <!--
        Attuse: th
        
        "headers" provides the id value(s), used with <td> cells, to reference
        one or more cells with <th id="xxx"> that contain headings that
        collectively describe or qualify the content of the cell, for example
        <td headers="id1 id2">.
        
        "scope" identifies one of
            (row | rowgroup | column | colgroup)
        to which the header information applies.
        
        "rowspan" indicates the total number of rows that the cell extends, by
        default 1. All spanned cells share these attributes.
        
        "colspan" indicates the total number of columns the cell extends,
        by default 1, in the writing direction of the table. All spanned
        cells share these attributes.
      -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <!-- STRICT NOTE: The DTBook attribute "abbr" on the "th" element is ignored when converting to HTML5. It has no good equivalent in HTML5. -->
        <!-- STRICT NOTE: The DTBook attribute "axis" on the "th" element is ignored when converting to HTML5. -->
        <optional>
            <a:documentation> "headers" provides the id value(s), used with td cells, </a:documentation>
            <a:documentation> for example td headers="id1 id2". </a:documentation>
            <attribute name="headers">
                <data type="IDREFS"/>
            </attribute>
        </optional>
        <optional>
            <a:documentation> "scope" identifies one of (row | rowgroup | column | colgroup) </a:documentation>
            <a:documentation> to which the header information applies. </a:documentation>
            <attribute name="scope">
                <ref name="Scope"/>
            </attribute>
        </optional>
        <optional>
            <a:documentation>  "rowspan" indicates the total number of rows that the cell extends, by </a:documentation>
            <a:documentation> default 1. All spanned cells share these attributes. </a:documentation>
            <attribute name="rowspan" a:defaultValue="1">
                <data type="NMTOKEN"/>
            </attribute>
        </optional>
        <optional>
            <a:documentation>  "colspan" indicates the total number of columns the cell extends, by default 1,  </a:documentation>
            <a:documentation> in the writing direction of the table. All spanned cells share these attributes. </a:documentation>
            <attribute name="colspan" a:defaultValue="1">
                <data type="NMTOKEN"/>
            </attribute>
        </optional>
        <ref name="cellhvalign"/> <!-- @style -->
    </define>
    
    <define name="td">
        <!-- Use: td indicates a table cell containing data. -->
        <a:documentation>  Use: td indicates a table cell containing data.  </a:documentation>
        <element name="td">
            <ref name="attlist.td"/> <!-- @headers, @scope, @rowspan, @colspan, @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class, @style -->
            <ref name="flowtd"/> <!-- em, strong, dfn, code, samp, kbd, span, abbr, math, a, img, br, q, sub, sup, bdo, p, hr, ol, ul, dl, pre, div, blockquote, section, table, address, aside, figure -->
        </element>
    </define>

    <define name="attlist.td" combine="interleave">
        <!--
        Attuse: td
        
        "headers" provides the id value(s), used with <td> cells, to reference
        one or more cells with <th id="xxx"> that contain headings that
        collectively describe or qualify the content of the cell, for example
        <td headers="id1 id2">.
        
        "scope" identifies one of
            (row | rowgroup | column | colgroup)
        to which the header information applies.
        
        "rowspan" indicates the total number of rows that the cell extends, by
        default 1. All spanned cells share these attributes.
        
        "colspan" indicates the total number of columns the cell extends,
        by default 1, in the writing direction of the table. All spanned
        cells share these attributes.
      -->
        <ref name="attrs"/> <!-- @id, @title, @xml:space, @xml:lang, @lang, @dir, @epub:type, @class -->
        <!-- STRICT NOTE: The DTBook attribute "abbr" on the "td" element is ignored when converting to HTML5. It has no good equivalent in HTML5. -->
        <!-- STRICT NOTE: The DTBook attribute "axis" on the "td" element is ignored when converting to HTML5. -->
        <optional>
            <a:documentation> "headers" provides the id value(s), used with td cells, </a:documentation>
            <a:documentation> for example td headers="id1 id2". </a:documentation>
            <attribute name="headers">
                <data type="IDREFS"/>
            </attribute>
        </optional>
        <optional>
            <a:documentation> "scope" identifies one of (row | rowgroup | column | colgroup) </a:documentation>
            <a:documentation> to which the header information applies. </a:documentation>
            <attribute name="scope">
                <ref name="Scope"/>
            </attribute>
        </optional>
        <optional>
            <a:documentation>  "rowspan" indicates the total number of rows that the cell extends, by </a:documentation>
            <a:documentation> default 1. All spanned cells share these attributes. </a:documentation>
            <attribute name="rowspan" a:defaultValue="1">
                <data type="NMTOKEN"/>
            </attribute>
        </optional>
        <optional>
            <a:documentation>  "colspan" indicates the total number of columns the cell extends, by default 1,  </a:documentation>
            <a:documentation> in the writing direction of the table. All spanned cells share these attributes. </a:documentation>
            <attribute name="colspan" a:defaultValue="1">
                <data type="NMTOKEN"/>
            </attribute>
        </optional>
        <ref name="cellhvalign"/> <!-- @style -->
    </define>
    
    <a:documentation>values for the epub:type and class attributes</a:documentation>
    
    <define name="types.sectioning">
        <a:documentation>  values for the epub:type and class attributes   </a:documentation>
        <choice>
            <value>volume</value>
            <value>chapter</value>
            <value>subchapter</value>
            <value>division</value>
            <value>abstract</value>
            <value>foreword</value>
            <value>preface</value>
            <value>prologue</value>
            <value>introduction</value>
            <value>preamble</value>
            <value>conclusion</value>
            <value>epilogue</value>
            <value>afterword</value>
            <value>epigraph</value>
            <value>toc</value>
            <value>toc-brief</value>
            <value>landmarks</value>
            <value>loa</value>
            <value>loi</value>
            <value>lot</value>
            <value>lov</value>
            <value>appendix</value>
            <value>colophon</value>
            <value>credits</value>
            <value>keywords</value>
            <value>index</value>
            <value>index-headnotes</value>
            <value>index-legend</value>
            <value>index-group</value>
            <value>glossary</value>
            <value>dictionary</value>
            <value>bibliography</value>
            <!--<value>titlepage</value>-->
            <value>halftitlepage</value>
            <value>copyright-page</value>
            <value>seriespage</value>
            <value>acknowledgments</value>
            <value>imprint</value>
            <value>imprimatur</value>
            <value>contributors</value>
            <value>other-credits</value>
            <value>errata</value>
            <value>dedication</value>
            <value>revision-history</value>
            <value>case-study</value>
            <value>notice</value>
            <value>answers</value>
            <value>assessment</value>
            <value>assessments</value>
            <value>qna</value>
            <value>practices</value>
            <value>rearnotes</value>
            <value>endnotes</value>
            <value>page-list</value>
            <value>z3998:section</value>
            <value>z3998:subsection</value>
            <value>z3998:discography</value>
            <value>z3998:filmography</value>
            <value>z3998:published-works</value>
            <value>z3998:publisher-address</value>
            <value>z3998:editorial-note</value>
            <value>z3998:grant-acknowledgment</value>
            <value>z3998:biographical-note</value>
            <value>z3998:translator-note</value>
            <value>z3998:promotional-copy</value>
        </choice>
    </define>
    
    <define name="types">
        <zeroOrMore>
            <choice>
                <value>acknowledgments</value>
                <!--<value>afterword</value>-->
                <!--<value>annoref</value>-->
                <!--<value>annotation</value>-->
                <value>answer</value>
                <!--<value>appendix</value>-->
                <!--<value>backmatter</value>-->
                <value>biblioentry</value>
                <value>bibliography</value>
                <!--<value>bodymatter</value>-->
                <value>bridgehead</value>
                <!--<value>chapter</value>-->
                <!--<value>colophon</value>-->
                <value>concluding-sentence</value>
                <!--<value>conclusion</value>-->
                <value>contributors</value>
                <value>copyright-page</value>
                <!--<value>cover</value>-->
                <!--<value>covertitle</value>-->
                <value>dedication</value>
                <!--<value>division</value>-->
                <!--<value>epigraph</value>-->
                <!--<value>epilogue</value>-->
                <value>errata</value>
                <!--<value>foreword</value>-->
                <!--<value>frontmatter</value>-->
                <value>fulltitle</value>
                <!--<value>glossary</value>-->
                <!--<value>dictionary</value>-->
                <value>glossdef</value>
                <value>glossterm</value>
                <value>halftitle</value>
                <value>halftitlepage</value>
                <value>help</value>
                <value>imprimatur</value>
                <value>imprint</value>
                <!--<value>index</value>-->
                <!--<value>introduction</value>-->
                <value>keyword</value>
                <value>landmarks</value>
                <value>list</value>
                <value>list-item</value>
                <value>loi</value>
                <value>lot</value>
                <value>marginalia</value>
                <!--<value>note</value>-->
                <!--<value>noteref</value>-->
                <value>notice</value>
                <value>other-credits</value>
                <!--<value>pagebreak</value>-->
                <value>page-list</value>
                <!--<value>part</value>-->
                <value>practice</value>
                <value>preamble</value>
                <!--<value>preface</value>-->
                <!--<value>prologue</value>-->
                <!--<value>rearnote</value>-->
                <value>endnote</value>
                <!--<value>rearnotes</value>-->
                <!--<value>endnotes</value>-->
                <!--<value>sidebar</value>-->
                <!--<value>subchapter</value>-->
                <value>subtitle</value>
                <value>table</value>
                <value>table-cell</value>
                <value>table-row</value>
                <value>title</value>
                <!--<value>titlepage</value>-->
                <value>toc</value>
                <value>topic-sentence</value>
                <!--<value>volume</value>-->
                <value>warning</value>
                <value>z3998:abbreviations</value>
                <value>z3998:acknowledgments</value>
                <value>z3998:acronym</value>
                <value>z3998:actor</value>
                <!--<value>z3998:afterword</value>-->
                <value>z3998:alteration</value>
                <!--<value>z3998:annoref</value>-->
                <!--<value>z3998:annotation</value>-->
                <!--<value>z3998:appendix</value>-->
                <value>z3998:article</value>
                <value>z3998:aside</value>
                <value>z3998:attribution</value>
                <value>z3998:author</value>
                <value>z3998:award</value>
                <!--<value>z3998:backmatter</value>-->
                <value>z3998:bcc</value>
                <value>z3998:bibliography</value>
                <value>z3998:biographical-note</value>
                <!--<value>z3998:bodymatter</value>-->
                <value>z3998:cardinal</value>
                <value>z3998:catalogue</value>
                <value>z3998:cc</value>
                <!--<value>z3998:chapter</value>-->
                <value>z3998:citation</value>
                <value>z3998:clarification</value>
                <value>z3998:collection</value>
                <!--<value>z3998:colophon</value>-->
                <value>z3998:commentary</value>
                <value>z3998:commentator</value>
                <value>z3998:compound</value>
                <value>z3998:concluding-sentence</value>
                <!--<value>z3998:conclusion</value>-->
                <value>z3998:continuation</value>
                <value>z3998:continuation-of</value>
                <value>z3998:contributors</value>
                <value>z3998:coordinate</value>
                <value>z3998:correction</value>
                <!--<value>z3998:covertitle</value>-->
                <value>z3998:currency</value>
                <value>z3998:decimal</value>
                <value>z3998:decorative</value>
                <value>z3998:dedication</value>
                <value>z3998:diary</value>
                <value>z3998:diary-entry</value>
                <value>z3998:discography</value>
                <value>z3998:division</value>
                <value>z3998:drama</value>
                <value>z3998:dramatis-personae</value>
                <value>z3998:editor</value>
                <value>z3998:editorial-note</value>
                <value>z3998:email</value>
                <value>z3998:email-message</value>
                <!--<value>z3998:epigraph</value>-->
                <!--<value>z3998:epilogue</value>-->
                <value>z3998:errata</value>
                <value>z3998:essay</value>
                <value>z3998:event</value>
                <value>z3998:example</value>
                <value>z3998:family-name</value>
                <value>z3998:fiction</value>
                <value>z3998:figure</value>
                <value>z3998:filmography</value>
                <!--<value>z3998:footnote</value>-->
                <!--<value>z3998:footnotes</value>-->
                <!--<value>z3998:foreword</value>-->
                <value>z3998:fraction</value>
                <value>z3998:from</value>
                <value>z3998:frontispiece</value>
                <!--<value>z3998:frontmatter</value>-->
                <value>z3998:ftp</value>
                <!--<value>z3998:fulltitle</value>-->
                <value>z3998:gallery</value>
                <value>z3998:general-editor</value>
                <value>z3998:geographic</value>
                <value>z3998:given-name</value>
                <!--<value>z3998:glossary</value>-->
                <value>z3998:grant-acknowledgment</value>
                <value>z3998:grapheme</value>
                <!--<value>z3998:halftitle</value>-->
                <value>z3998:halftitle-page</value>
                <!--<value>z3998:help</value>-->
                <value>z3998:homograph</value>
                <value>z3998:http</value>
                <value>z3998:hymn</value>
                <value>z3998:illustration</value>
                <value>z3998:image-placeholder</value>
                <!--<value>z3998:imprimatur</value>-->
                <!--<value>z3998:imprint</value>-->
                <!--<value>z3998:index</value>-->
                <value>z3998:initialism</value>
                <!--<value>z3998:introduction</value>-->
                <value>z3998:introductory-note</value>
                <value>z3998:ip</value>
                <value>z3998:isbn</value>
                <!--<value>z3998:keyword</value>-->
                <value>z3998:letter</value>
                <!--<value>z3998:loi</value>-->
                <!--<value>z3998:lot</value>-->
                <value>z3998:lyrics</value>
                <!--<value>z3998:marginalia</value>-->
                <value>z3998:measure</value>
                <value>z3998:mixed</value>
                <value>z3998:morpheme</value>
                <value>z3998:name-title</value>
                <value>z3998:nationality</value>
                <value>z3998:non-fiction</value>
                <!--<value>z3998:nonresolving-citation</value>-->
                <value>z3998:nonresolving-reference</value>
                <!--<value>z3998:note</value>-->
                <!--<value>z3998:noteref</value>-->
                <!--<value>z3998:notice</value>-->
                <value>z3998:orderedlist</value>
                <value>z3998:ordinal</value>
                <value>z3998:organization</value>
                <!--<value>z3998:other-credits</value>-->
                <!--<value>z3998:pagebreak</value>-->
                <value>z3998:page-footer</value>
                <value>z3998:page-header</value>
                <!--<value>z3998:part</value>-->
                <value>z3998:percentage</value>
                <value>z3998:persona</value>
                <value>z3998:personal-name</value>
                <value>z3998:pgroup</value>
                <value>z3998:phone</value>
                <value>z3998:phoneme</value>
                <value>z3998:photograph</value>
                <value>z3998:phrase</value>
                <value>z3998:place</value>
                <value>z3998:plate</value>
                <!--<value>z3998:poem</value>-->
                <value>z3998:portmanteau</value>
                <value>z3998:postal</value>
                <value>z3998:postal-code</value>
                <value>z3998:postscript</value>
                <!--<value>z3998:practice</value>-->
                <!--<value>z3998:preamble</value>-->
                <!--<value>z3998:preface</value>-->
                <value>z3998:prefix</value>
                <value>z3998:presentation</value>
                <value>z3998:primary</value>
                <value>z3998:product</value>
                <value>z3998:production</value>
                <!--<value>z3998:prologue</value>-->
                <value>z3998:promotional-copy</value>
                <value>z3998:published-works</value>
                <value>z3998:publisher-address</value>
                <value>z3998:publisher-logo</value>
                <value>z3998:range</value>
                <value>z3998:ratio</value>
                <!--<value>z3998:rearnote</value>-->
                <!--<value>z3998:rearnotes</value>-->
                <value>z3998:recipient</value>
                <value>z3998:recto</value>
                <value>z3998:reference</value>
                <value>z3998:republisher</value>
                <value>z3998:resolving-reference</value>
                <value>z3998:result</value>
                <value>z3998:role-description</value>
                <value>z3998:roman</value>
                <value>z3998:root</value>
                <value>z3998:salutation</value>
                <value>z3998:scene</value>
                <value>z3998:secondary</value>
                <!--<value>z3998:section</value>-->
                <value>z3998:sender</value>
                <!--<value>z3998:sentence</value>-->
                <!--<value>z3998:sidebar</value>-->
                <value>z3998:signature</value>
                <value>z3998:song</value>
                <value>z3998:speech</value>
                <value>z3998:stage-direction</value>
                <value>z3998:stem</value>
                <value>z3998:structure</value>
                <value>z3998:subchapter</value>
                <value>z3998:subject</value>
                <!--<value>z3998:subsection</value>-->
                <!--<value>z3998:subtitle</value>-->
                <value>z3998:suffix</value>
                <value>z3998:surname</value>
                <value>z3998:taxonomy</value>
                <value>z3998:tertiary</value>
                <value>z3998:text</value>
                <value>z3998:textbook</value>
                <value>z3998:t-form</value>
                <value>z3998:timeline</value>
                <!--<value>z3998:title</value>-->
                <value>z3998:title-page</value>
                <value>z3998:to</value>
                <!--<value>z3998:toc</value>-->
                <!--<value>z3998:topic-sentence</value>-->
                <value>z3998:translator</value>
                <value>z3998:translator-note</value>
                <value>z3998:truncation</value>
                <value>z3998:unorderedlist</value>
                <value>z3998:valediction</value>
                <!--<value>z3998:verse</value>-->
                <value>z3998:verso</value>
                <value>z3998:v-form</value>
                <value>z3998:volume</value>
                <!--<value>z3998:warning</value>-->
                <value>z3998:weight</value>
                <!--<value>z3998:word</value>-->
                
                <!-- dictionaries vocabulary -->
                <value>antonym-group</value>
                <value>condensed-entry</value>
                <value>def</value>
                <value>dictentry</value>
                <value>etymology</value>
                <value>example</value>
                <value>gram-info</value>
                <value>idiom</value>
                <value>part-of-speech</value>
                <value>part-of-speech-group</value>
                <value>part-of-speech-list</value>
                <value>phonetic-transcription</value>
                <value>phrase-group</value>
                <value>phrase-list</value>
                <value>sense-group</value>
                <value>sense-list</value>
                <value>synonym-group</value>
                <value>tran</value>
                <value>tran-info</value>
                
                <!-- indexes vocabulary -->
                <a:documentation> indexes vocabulary </a:documentation>
                <value>index-editor-note</value>
                <value>index-entry</value>
                <value>index-entry-list</value>
                <value>index-locator</value>
                <value>index-locator-list</value>
                <value>index-locator-range</value>
                <value>index-term</value>
                <value>index-term-categories</value>
                <value>index-term-category</value>
                <value>index-xref-preferred</value>
                
                <!-- magazine vocabulary -->
                <!-- msv: http://www.idpf.org/epub/vocab/structure/magazine/# -->
                <!-- prism: http://www.prismstandard.org/specifications/3.0/PRISM_CV_Spec_3.0.htm# -->
                <a:documentation> magazine vocabulary</a:documentation>
                <a:documentation> msv: http://www.idpf.org/epub/vocab/structure/magazine/#  </a:documentation>
                <a:documentation> prism: http://www.prismstandard.org/specifications/3.0/PRISM_CV_Spec_3.0.htm# </a:documentation>
                <value>prism:title</value>
                <value>prism:deck</value>
                <value>prism:subtitle</value>
                <value>prism:byline</value>
                <value>prism:contributors</value>
                <value>prism:caption</value>
                <value>prism:credit</value>
                <value>prism:box</value>
                <value>prism:advertisement</value>
                <value>prism:pullQuote</value>
                <value>msv:article-region</value>
                <value>msv:article-text</value>
                <value>msv:media</value>
                
                <!-- educational vocabulary (EDUPUB) -->
                <a:documentation> educational vocabulary (EDUPUB)</a:documentation>
               
                <value>biblioref</value>
                <value>credit</value>
                <value>feedback</value>
                <value>fill-in-the-blank-problem</value>
                <value>general-problem</value>
                <value>glossref</value>
                <value>label</value>
                <value>learning-objective</value>
                <value>learning-objectives</value>
                <value>learning-outcome</value>
                <value>learning-outcomes</value>
                <value>learning-resource</value>
                <value>learning-resources</value>
                <value>learning-standard</value>
                <value>learning-standards</value>
                <value>match-problem</value>
                <value>multiple-choice-problem</value>
                <value>ordinal</value>
                <value>pullquote</value>
                <value>question</value>
                <value>referrer</value>
                <value>true-false-problem</value>
            </choice>
        </zeroOrMore>
    </define>

    <define name="roles">
        <zeroOrMore>
            <choice>
                <value>doc-abstract</value>
                <value>doc-acknowledgments</value>
                <value>doc-afterword</value>
                <value>doc-appendix</value>
                <value>doc-backlink</value>
                <value>doc-biblioentry</value>
                <value>doc-bibliography</value>
                <value>doc-biblioref</value>
                <value>doc-chapter</value>
                <value>doc-colophon</value>
                <value>doc-conclusion</value>
                <value>doc-cover</value>
                <value>doc-credit</value>
                <value>doc-credits</value>
                <value>doc-dedication</value>
                <value>doc-endnote</value>
                <value>doc-endnotes</value>
                <value>doc-epigraph</value>
                <value>doc-epilogue</value>
                <value>doc-errata</value>
                <value>doc-example</value>
                <value>doc-footnote</value>
                <value>doc-foreword</value>
                <value>doc-glossary</value>
                <value>doc-glossref</value>
                <value>doc-index</value>
                <value>doc-introduction</value>
                <value>doc-noteref</value>
                <value>doc-notice</value>
                <value>doc-pagebreak</value>
                <value>doc-pagelist</value>
                <value>doc-part</value>
                <value>doc-preface</value>
                <value>doc-prologue</value>
                <value>doc-pullquote</value>
                <value>doc-qna</value>
                <value>doc-subtitle</value>
                <value>doc-tip</value>
                <value>doc-toc</value>
                <value>navigation</value>
            </choice>
        </zeroOrMore>
    </define>

    <define name="classes">
        <a:documentation>Allow all classes, except certain classes that have a special meaning.</a:documentation>
        <a:documentation>Classes with a special meaning will be handled explicitly where relevant.</a:documentation>
        <zeroOrMore>
            <data type="string">
                <except>
                    <value>frontcover</value>
                    <value>rearcover</value>
                    <value>leftflap</value>
                    <value>rightflap</value>
                    <value>line</value>
                    <value>linenum</value>
                    <value>prodnote</value>
                    <value>sidebar</value>
                    <value>annotation</value>
                    <value>byline</value>
                    <value>dateline</value>
                    <value>linegroup</value>
                    <value>verse</value>
                    <value>verse-author</value>
                    <value>linegroup</value>
                    <value>line</value>
                    <value>line_indent</value>
                    <value>line_longindent</value>
                    <value>linenum</value>
                    <value>acronym</value>
                    <value>page-front</value>
                    <value>page-normal</value>
                    <value>page-special</value>
                    <value>noteref</value>
                    <value>annoref</value>
                    <value>image-series</value>
                    <value>image</value>
                    <value>fig-desc</value>
                    <value>emptyline</value>
                    <value>separator</value>
                    <value>docauthor</value>
                    <value>bridgehead</value>
                    <value>lic</value>
                    <value>row</value>
                    <value>col</value>
                    <value>rowgroup</value>
                    <value>colgroup</value>
                    <value>table-summary</value>
                </except>
            </data>
        </zeroOrMore>
    </define>
</grammar>
